{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/components/LPHeader.tsx"],"sourcesContent":["import Link from 'next/link'\r\n\r\nexport default function LPHeader() {\r\n  return (\r\n    <header className=\"bg-white border-b\">\r\n      <div className=\"max-w-6xl mx-auto p-6 flex items-center justify-between\">\r\n        <div className=\"text-xl font-bold text-dribla-700\">Dribla</div>\r\n        <nav>\r\n          <Link href=\"/login\" className=\"text-sm text-gray-600 hover:text-dribla-600 mr-4\">\r\n            Login\r\n          </Link>\r\n          <Link href=\"/cadastro\" className=\"text-sm bg-dribla-600 text-white px-4 py-2 rounded-lg hover:bg-dribla-700\">\r\n            Cadastrar\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC;QAAO,WAAU;kBAChB,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAI,WAAU;8BAAoC;;;;;;8BACnD,qKAAC;;sCACC,qKAAC,gIAAI;4BAAC,MAAK;4BAAS,WAAU;sCAAmD;;;;;;sCAGjF,qKAAC,gIAAI;4BAAC,MAAK;4BAAY,WAAU;sCAA4E;;;;;;;;;;;;;;;;;;;;;;;AAOvH","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/pages/checkout.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport { CheckCircle, Lock, Users, Zap } from 'lucide-react';\r\nimport LPHeader from '../components/LPHeader'; // Reutiliza o Header da Landing Page\r\n\r\n// Definição dos planos\r\nconst PLANOS_INFO = {\r\n  VIP: {\r\n    nome: \"Plano VIP\",\r\n    preco: \"R$ 59,90\",\r\n    precoMes: \"/mês\",\r\n    limite: \"Até 150 alunos\",\r\n    beneficios: [\r\n      \"Gestão de Alunos Ilimitada (até 150)\",\r\n      \"Dashboard Financeiro Completo\",\r\n      \"Envio Automático de Cobranças\",\r\n    ],\r\n    cor: \"dribla-green\"\r\n  },\r\n  PREMIUM: {\r\n    nome: \"Plano Premium\",\r\n    preco: \"R$ 99,90\",\r\n    precoMes: \"/mês\",\r\n    limite: \"Alunos Ilimitados\",\r\n    beneficios: [\r\n      \"Todos os benefícios do VIP\",\r\n      \"Alunos Ilimitados\",\r\n      \"Mensagens de Cobrança Personalizadas\",\r\n    ],\r\n    cor: \"dribla-orange\"\r\n  }\r\n};\r\n\r\ntype PlanoKey = 'VIP' | 'PREMIUM';\r\n\r\nconst CheckoutPage: React.FC = () => {\r\n  const router = useRouter();\r\n  const [planoSelecionado, setPlanoSelecionado] = useState<PlanoKey>('VIP'); // Default\r\n\r\n  useEffect(() => {\r\n    // Lê o plano da URL (ex: /checkout?plano=VIP)\r\n    if (router.query.plano && (router.query.plano === 'VIP' || router.query.plano === 'PREMIUM')) {\r\n      setPlanoSelecionado(router.query.plano as PlanoKey);\r\n    }\r\n  }, [router.query]);\r\n\r\n  const planoInfo = PLANOS_INFO[planoSelecionado];\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // A LÓGICA DE PAGAMENTO FOI REMOVIDA\r\n    // Apenas redireciona para uma página de \"sucesso\" (mock) ou dashboard\r\n    alert(\"Simulação de Pagamento Concluída! (Redirecionando...)\");\r\n    router.push('/home-acao');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Dribla | Checkout - {planoInfo.nome}</title>\r\n      </Head>\r\n      \r\n      <div className=\"min-h-screen bg-dribla-graphite text-dribla-light\">\r\n        <LPHeader />\r\n\r\n        <main className=\"max-w-6xl mx-auto p-4 md:p-8 mt-10\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12\">\r\n            \r\n            {/* Coluna 1: Resumo do Plano (Dinâmico) */}\r\n            <div className={`p-8 rounded-xl border-2 border-${planoInfo.cor} bg-gray-900/50 shadow-2xl`}>\r\n              <h2 className=\"text-2xl font-bold text-white mb-4\">{planoInfo.nome}</h2>\r\n              \r\n              <div className=\"mb-6\">\r\n                <span className={`text-5xl font-extrabold text-${planoInfo.cor}`}>{planoInfo.preco}</span>\r\n                <span className=\"text-lg text-gray-400 ml-2\">{planoInfo.precoMes}</span>\r\n              </div>\r\n              \r\n              <p className=\"text-sm text-gray-300 mb-6\">\r\n                {planoInfo.limite === \"Alunos Ilimitados\" \r\n                  ? <Users className=\"w-5 h-5 inline mr-2 text-dribla-green\" /> \r\n                  : <Users className=\"w-5 h-5 inline mr-2 text-dribla-green\" />}\r\n                {planoInfo.limite}\r\n              </p>\r\n\r\n              <ul className=\"space-y-3\">\r\n                {planoInfo.beneficios.map((beneficio) => (\r\n                  <li key={beneficio} className=\"flex items-center text-gray-300\">\r\n                    <CheckCircle className=\"w-5 h-5 mr-3 text-dribla-green flex-shrink-0\" />\r\n                    {beneficio}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n\r\n            {/* Coluna 2: Formulário de Pagamento (Mock) */}\r\n            <div className=\"bg-gray-800 p-8 rounded-xl shadow-lg border border-gray-700\">\r\n              <h2 className=\"text-2xl font-bold text-white mb-6\">Informações de Pagamento</h2>\r\n              \r\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                {/* Email (Simulação) */}\r\n                <div>\r\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300\">Email da Conta</label>\r\n                  <input \r\n                    type=\"email\" \r\n                    id=\"email\" \r\n                    className=\"mt-1 block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-dribla-green focus:border-dribla-green sm:text-sm text-white\"\r\n                    placeholder=\"treinador@escola.com\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Nome no Cartão (Simulação) */}\r\n                <div>\r\n                  <label htmlFor=\"card-name\" className=\"block text-sm font-medium text-gray-300\">Nome no Cartão</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    id=\"card-name\"\r\n                    placeholder=\"Nome completo\"\r\n                    className=\"mt-1 block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-dribla-green focus:border-dribla-green sm:text-sm text-white\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                {/* Dados Falsos do Cartão */}\r\n                <div>\r\n                  <label htmlFor=\"card-number\" className=\"block text-sm font-medium text-gray-300\">Dados do Cartão (Simulação)</label>\r\n                  <div className=\"mt-1 p-2 bg-gray-700 border border-gray-600 rounded-md text-gray-400\">\r\n                    (Simulação de Checkout - Não insira dados reais)\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Botão de Pagamento (Mock) */}\r\n                <button \r\n                  type=\"submit\" \r\n                  className={`w-full py-3 mt-4 bg-${planoInfo.cor} text-gray-900 font-bold rounded-lg hover:opacity-90 transition duration-300 shadow-xl flex items-center justify-center`}\r\n                >\r\n                  <Lock className=\"w-5 h-5 mr-2\" />\r\n                  Pagar e Ativar Plano {planoSelecionado}\r\n                </button>\r\n                <p className=\"text-xs text-gray-500 text-center mt-2\">Pagamento seguro (simulado).</p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;"],"names":[],"mappings":"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","debugId":null}}]
}