{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/lib/supabaseClient.ts"],"sourcesContent":["// lib/supabaseClient.ts\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Variáveis de ambiente devem ser configuradas no Vercel e no .env.local\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\n// Verifica se as chaves existem antes de criar o cliente\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  // Lançar um erro claro para o ambiente de desenvolvimento/compilação\r\n  throw new Error(\"As variáveis de ambiente NEXT_PUBLIC_SUPABASE_URL e NEXT_PUBLIC_SUPABASE_ANON_KEY devem estar definidas.\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAExB;;AAEA,yEAAyE;AACzE,MAAM;AACN,MAAM;AAEN,yDAAyD;AACzD;;AAKO,MAAM,WAAW,IAAA,iKAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/components/Layout.tsx"],"sourcesContent":["// components/Layout.tsx\r\n\r\nimport React, { ReactNode } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router'; // Para destacar o link ativo\r\nimport { Home, Users, CreditCard, User, LogOut } from 'lucide-react'; // Ícones\r\nimport { supabase } from '../lib/supabaseClient'; // Para o botão de logout\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n  title: string; // Título da página atual a ser exibido no cabeçalho\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children, title }) => {\r\n  const router = useRouter();\r\n\r\n  // Função para fazer logout\r\n  const handleLogout = async () => {\r\n    const { error } = await supabase.auth.signOut();\r\n    if (!error) {\r\n      router.push('/login'); // Redireciona para login após logout\r\n    } else {\r\n      console.error(\"Erro ao fazer logout:\", error);\r\n      // Adicionar feedback visual de erro aqui, se necessário (ex: toast)\r\n    }\r\n  };\r\n\r\n  // Itens da navegação da Sidebar\r\n  const navItems = [\r\n    { href: '/home-acao', label: 'Dashboard', icon: Home },\r\n    { href: '/elenco', label: 'Elenco', icon: Users },\r\n    { href: '/financeiro', label: 'Financeiro', icon: CreditCard }, // <-- LINK ADICIONADO\r\n    // { href: '/configuracoes', label: 'Configurações', icon: Settings }, // Exemplo para futuras páginas\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex bg-dribla-graphite text-dribla-light\">\r\n      {/* Sidebar Fixa */}\r\n      <aside className=\"w-64 bg-gray-900 p-4 flex flex-col justify-between border-r border-gray-800 shadow-lg\">\r\n        {/* Parte Superior: Logo e Navegação Principal */}\r\n        <div>\r\n          <div className=\"mb-8 text-center pt-2\">\r\n            {/* Logo Clicável */}\r\n             <Link href=\"/home-acao\" className=\"text-3xl font-bold text-dribla-green tracking-wider inline-block\">\r\n               DRIBLA\r\n             </Link>\r\n          </div>\r\n          {/* Menu de Navegação */}\r\n          <nav className=\"space-y-2\">\r\n            {navItems.map((item) => {\r\n              const isActive = router.pathname === item.href;\r\n              return (\r\n                <Link\r\n                  key={item.href}\r\n                  href={item.href}\r\n                  // Estilos do link, incluindo o estado ativo\r\n                  className={`flex items-center px-4 py-2.5 rounded-lg transition duration-200 ease-in-out group ${\r\n                    isActive\r\n                      ? 'bg-dribla-green text-gray-900 font-semibold shadow-md' // Estilo Ativo\r\n                      : 'text-gray-400 hover:bg-gray-800 hover:text-white' // Estilo Inativo/Hover\r\n                  }`}\r\n                >\r\n                  <item.icon className={`w-5 h-5 mr-3 transition duration-200 ${isActive ? 'text-gray-900' : 'text-gray-500 group-hover:text-white'}`} />\r\n                  {item.label}\r\n                </Link>\r\n              );\r\n            })}\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Parte Inferior: Perfil (Futuro) e Logout */}\r\n        <div className=\"border-t border-gray-700 pt-4 mt-4 space-y-2\">\r\n           {/* Link para Perfil (Ainda não criado) - Descomentar quando a página existir */}\r\n           {/* <Link href=\"/perfil\" className={`flex items-center px-4 py-2.5 rounded-lg transition duration-200 ${ router.pathname === '/perfil' ? 'bg-gray-700 text-white' : 'text-gray-400 hover:bg-gray-800 hover:text-white'}`}>\r\n             <User className=\"w-5 h-5 mr-3\" /> Perfil\r\n           </Link> */}\r\n           {/* Botão de Logout */}\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"w-full flex items-center px-4 py-2.5 rounded-lg text-gray-400 hover:bg-red-800/50 hover:text-red-300 transition duration-200 group\"\r\n          >\r\n            <LogOut className=\"w-5 h-5 mr-3 text-gray-500 group-hover:text-red-300 transition duration-200\" />\r\n            Sair\r\n          </button>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Conteúdo Principal Flexível */}\r\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\r\n         {/* Cabeçalho Superior Fixo (Opcional, mas útil) */}\r\n         <header className=\"bg-gray-850 p-4 border-b border-gray-700 shadow-sm sticky top-0 z-10 flex items-center h-16\">\r\n            {/* Título da Página Atual */}\r\n            <h1 className=\"text-xl font-semibold text-white\">{title}</h1>\r\n            {/* Pode adicionar outras informações aqui, como nome do usuário */}\r\n         </header>\r\n\r\n         {/* Área de Conteúdo com Scroll */}\r\n         <main className=\"flex-1 p-6 md:p-10 overflow-y-auto bg-dribla-graphite\">\r\n            {children}\r\n         </main>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;;AAGxB;AACA,mNAAyC,6BAA6B;AACtE,qUAAsE,SAAS;AAA/E;AAAA;AAAA;AACA,oMAAkD,yBAAyB;;;;;;AAO3E,MAAM,SAAgC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE;IACxD,MAAM,SAAS,IAAA,oIAAS;IAExB,2BAA2B;IAC3B,MAAM,eAAe;QACnB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0HAAQ,CAAC,IAAI,CAAC,OAAO;QAC7C,IAAI,CAAC,OAAO;YACV,OAAO,IAAI,CAAC,WAAW,qCAAqC;QAC9D,OAAO;YACL,QAAQ,KAAK,CAAC,yBAAyB;QACvC,oEAAoE;QACtE;IACF;IAEA,gCAAgC;IAChC,MAAM,WAAW;QACf;YAAE,MAAM;YAAc,OAAO;YAAa,MAAM,mMAAI;QAAC;QACrD;YAAE,MAAM;YAAW,OAAO;YAAU,MAAM,sMAAK;QAAC;QAChD;YAAE,MAAM;YAAe,OAAO;YAAc,MAAM,yNAAU;QAAC;KAE9D;IAED,qBACE,qKAAC;QAAI,WAAU;;0BAEb,qKAAC;gBAAM,WAAU;;kCAEf,qKAAC;;0CACC,qKAAC;gCAAI,WAAU;0CAEZ,cAAA,qKAAC,gIAAI;oCAAC,MAAK;oCAAa,WAAU;8CAAmE;;;;;;;;;;;0CAKxG,qKAAC;gCAAI,WAAU;0CACZ,SAAS,GAAG,CAAC,CAAC;oCACb,MAAM,WAAW,OAAO,QAAQ,KAAK,KAAK,IAAI;oCAC9C,qBACE,qKAAC,gIAAI;wCAEH,MAAM,KAAK,IAAI;wCACf,4CAA4C;wCAC5C,WAAW,CAAC,mFAAmF,EAC7F,WACI,wDAAwD,eAAe;2CACvE,mDAAmD,uBAAuB;0CAC9E;;0DAEF,qKAAC,KAAK,IAAI;gDAAC,WAAW,CAAC,qCAAqC,EAAE,WAAW,kBAAkB,wCAAwC;;;;;;4CAClI,KAAK,KAAK;;uCAVN,KAAK,IAAI;;;;;gCAapB;;;;;;;;;;;;kCAKJ,qKAAC;wBAAI,WAAU;kCAMb,cAAA,qKAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,qKAAC,6MAAM;oCAAC,WAAU;;;;;;gCAAgF;;;;;;;;;;;;;;;;;;0BAOxG,qKAAC;gBAAI,WAAU;;kCAEZ,qKAAC;wBAAO,WAAU;kCAEf,cAAA,qKAAC;4BAAG,WAAU;sCAAoC;;;;;;;;;;;kCAKrD,qKAAC;wBAAK,WAAU;kCACZ;;;;;;;;;;;;;;;;;;AAMb;uCAEe","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/components/ModalNovoAluno.tsx"],"sourcesContent":["// components/ModalNovoAluno.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { supabase } from '../lib/supabaseClient';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\ninterface ModalNovoAlunoProps {\r\n  onClose: () => void;\r\n  onAlunoAdicionado: () => void; // Callback para atualizar a lista\r\n}\r\n\r\n// Define os tipos de status que podemos SALVAR inicialmente\r\ntype StatusInicialPossivel = 'paga' | 'vencida';\r\n\r\nconst ModalNovoAluno: React.FC<ModalNovoAlunoProps> = ({ onClose, onAlunoAdicionado }) => {\r\n  const [nome, setNome] = useState('');\r\n  const [nomePai, setNomePai] = useState('');\r\n  const [emailPai, setEmailPai] = useState('');\r\n  const [valor, setValor] = useState<number | ''>('');\r\n  // Padrão para hoje no formato YYYY-MM-DD\r\n  const hoje = new Date().toISOString().slice(0, 10);\r\n  const [vencimento, setVencimento] = useState<string>(hoje);\r\n  // NOVO ESTADO: Controla se o pagamento inicial foi feito (true = pago, false = não pago)\r\n  const [foiPagoInicialmente, setFoiPagoInicialmente] = useState<boolean>(true); // Padrão 'pago'\r\n  const [loadingModal, setLoadingModal] = useState(false);\r\n  const [errorModal, setErrorModal] = useState<string | null>(null);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoadingModal(true);\r\n    setErrorModal(null);\r\n\r\n    // Validação Simples\r\n    if (!nome || !emailPai || valor === '' || !vencimento) {\r\n      setErrorModal('Preencha todos os campos obrigatórios.');\r\n      setLoadingModal(false);\r\n      return;\r\n    }\r\n     if (valor < 0) {\r\n       setErrorModal('O valor da mensalidade não pode ser negativo.');\r\n       setLoadingModal(false);\r\n       return;\r\n    }\r\n\r\n    // Verificação de Limite de Alunos (código omitido por brevidade - continua igual)\r\n    const { data: { user } } = await supabase.auth.getUser();\r\n    if (!user) {\r\n      setErrorModal('Usuário não autenticado. Faça login novamente.');\r\n      setLoadingModal(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n        // Busca dados do treinador e conta alunos (código omitido por brevidade - continua igual)\r\n        const { data: treinadorData, error: treinadorError } = await supabase.from('treinadores').select('plano_atual, limite_alunos').eq('id', user.id).single();\r\n        if (treinadorError) throw treinadorError;\r\n        const { count: alunosAtuais, error: countError } = await supabase.from('alunos').select('*', { count: 'exact', head: true }).eq('id_treinador', user.id);\r\n        if (countError) throw countError;\r\n        if (treinadorData.plano_atual !== 'premium' && (alunosAtuais ?? 0) >= treinadorData.limite_alunos) {\r\n             setErrorModal(`Limite de ${treinadorData.limite_alunos} alunos atingido para o plano ${treinadorData.plano_atual.toUpperCase()}. Faça upgrade.`);\r\n             setLoadingModal(false);\r\n             return;\r\n        }\r\n\r\n\r\n        // --- LÓGICA CORRIGIDA PARA STATUS INICIAL ---\r\n        let statusParaSalvar: StatusInicialPossivel = 'paga'; // Padrão\r\n\r\n        if (!foiPagoInicialmente) {\r\n            // Converte a data de vencimento (string YYYY-MM-DD) para um objeto Date (UTC)\r\n            const dataVencimentoObj = new Date(vencimento + 'T00:00:00Z');\r\n            // Pega a data de hoje (meia-noite UTC) para comparação correta\r\n            const hojeObj = new Date();\r\n            hojeObj.setUTCHours(0, 0, 0, 0);\r\n\r\n            // Se a data de vencimento for ANTERIOR a hoje, marca como vencida\r\n            if (dataVencimentoObj < hojeObj) {\r\n                statusParaSalvar = 'vencida';\r\n            }\r\n            // Se for hoje ou no futuro, mantém 'paga' (a automação pegará depois)\r\n        }\r\n        // Se foiPagoInicialmente for true, o status já é 'paga'\r\n\r\n        // --- Inserção do Aluno ---\r\n        const payload = {\r\n          nome_aluno: nome,\r\n          nome_pai: nomePai || 'Não informado',\r\n          email_pai: emailPai,\r\n          data_matricula: hoje,\r\n          data_vencimento_mensalidade: vencimento, // Salva a data escolhida\r\n          // Usa o status calculado\r\n          status_mensalidade: statusParaSalvar,\r\n          valor_mensalidade: valor,\r\n          id_treinador: user.id\r\n        };\r\n\r\n        const { error: insertError } = await supabase.from('alunos').insert([payload]);\r\n\r\n        if (insertError) {\r\n          console.error('Erro ao inserir aluno:', insertError);\r\n          throw new Error('Erro ao cadastrar atleta. Verifique os dados e tente novamente.');\r\n        }\r\n\r\n        // Sucesso!\r\n        setLoadingModal(false);\r\n        onAlunoAdicionado();\r\n\r\n    } catch (err: any) {\r\n        console.error(\"Erro no Modal:\", err);\r\n        setErrorModal(err.message || 'Ocorreu um erro inesperado.');\r\n        setLoadingModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70 backdrop-blur-sm\">\r\n      <div className=\"bg-gray-800 p-8 rounded-xl shadow-2xl z-10 w-full max-w-lg border border-gray-700\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-white text-center\">Adicionar Novo Atleta</h2>\r\n\r\n        {errorModal && <p className=\"text-red-400 bg-red-900/50 p-3 rounded mb-4 text-center\">{errorModal}</p>}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {/* Campos Nome Aluno, Nome Pai, Email Pai (sem alterações) */}\r\n          <div>\r\n            <label htmlFor=\"nome-aluno\" className=\"block text-sm font-medium text-gray-300 mb-1\">Nome do Atleta*</label>\r\n            <input id=\"nome-aluno\" value={nome} onChange={(e) => setNome(e.target.value)} required className=\"w-full input-dribla\" placeholder=\"Nome completo do aluno\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"nome-pai\" className=\"block text-sm font-medium text-gray-300 mb-1\">Nome do Responsável</label>\r\n            <input id=\"nome-pai\" value={nomePai} onChange={(e) => setNomePai(e.target.value)} className=\"w-full input-dribla\" placeholder=\"(Opcional)\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email-pai\" className=\"block text-sm font-medium text-gray-300 mb-1\">Email do Responsável*</label>\r\n            <input id=\"email-pai\" value={emailPai} onChange={(e) => setEmailPai(e.target.value)} type=\"email\" required className=\"w-full input-dribla\" placeholder=\"Para envio de cobranças\"/>\r\n          </div>\r\n\r\n          {/* Linha para Valor e Vencimento (sem alterações) */}\r\n           <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\r\n            <div className=\"flex-1\">\r\n              <label htmlFor=\"valor\" className=\"block text-sm font-medium text-gray-300 mb-1\">Valor Mensalidade (R$)*</label>\r\n              <input id=\"valor\" value={valor} onChange={(e) => setValor(e.target.value === '' ? '' : Number(e.target.value))} type=\"number\" min=\"0\" step=\"0.01\" required className=\"w-full input-dribla\" placeholder=\"Ex: 100.00\"/>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <label htmlFor=\"vencimento\" className=\"block text-sm font-medium text-gray-300 mb-1\">Próximo Vencimento*</label>\r\n              <input id=\"vencimento\" value={vencimento} onChange={(e) => setVencimento(e.target.value)} type=\"date\" required className=\"w-full input-dribla\"/>\r\n            </div>\r\n          </div>\r\n\r\n          {/* CAMPO CORRIGIDO: Status Inicial (Pago / Não Pago) */}\r\n          <div>\r\n             <label className=\"block text-sm font-medium text-gray-300 mb-2\">Status da Mensalidade na Matrícula*</label>\r\n             <div className=\"flex items-center space-x-6\">\r\n                {/* Opção Pago */}\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"statusInicial\"\r\n                        checked={foiPagoInicialmente === true} // Liga ao estado booleano\r\n                        onChange={() => setFoiPagoInicialmente(true)}\r\n                        className=\"form-radio h-4 w-4 text-dribla-green bg-gray-600 border-gray-500 focus:ring-dribla-green\"\r\n                    />\r\n                    <span className=\"ml-2 text-sm text-gray-300\">Pago</span>\r\n                </label>\r\n                {/* Opção Não Pago */}\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"statusInicial\"\r\n                        checked={foiPagoInicialmente === false} // Liga ao estado booleano\r\n                        onChange={() => setFoiPagoInicialmente(false)}\r\n                         className=\"form-radio h-4 w-4 text-dribla-orange bg-gray-600 border-gray-500 focus:ring-dribla-orange\"\r\n                    />\r\n                    <span className=\"ml-2 text-sm text-gray-300\">Não Pago</span>\r\n                </label>\r\n             </div>\r\n             {/* Ajuda contextual */}\r\n             {!foiPagoInicialmente && (\r\n                <p className=\"mt-2 text-xs text-gray-400\">\r\n                    Se a data de vencimento acima já passou, o status será 'Vencido'. Caso contrário, será 'Pago' (pendente).\r\n                </p>\r\n             )}\r\n          </div>\r\n\r\n          {/* Botões de Ação (sem alterações) */}\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <button type=\"button\" onClick={onClose} className=\"btn-secondary\">\r\n              Cancelar\r\n            </button>\r\n            <button type=\"submit\" disabled={loadingModal} className=\"btn-primary flex items-center\">\r\n              {loadingModal ? <Loader2 className=\"w-5 h-5 animate-spin mr-2\" /> : null}\r\n              {loadingModal ? 'Salvando...' : 'Adicionar Atleta'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n       {/* Estilos Globais JSX (sem alterações) */}\r\n      <style jsx global>{`\r\n        .input-dribla { /* ... estilos ... */ }\r\n        .input-dribla:focus { /* ... estilos ... */ }\r\n         .btn-primary { /* ... estilos ... */ }\r\n        .btn-primary:hover { /* ... estilos ... */ }\r\n         .btn-primary:disabled { /* ... estilos ... */ }\r\n        .btn-secondary { /* ... estilos ... */ }\r\n        .btn-secondary:hover { /* ... estilos ... */ }\r\n        /* Estiliza os radio buttons */\r\n        .form-radio { appearance: none; border-radius: 50%; width: 1rem; height: 1rem; border: 1px solid rgb(75 85 99); background-color: rgb(55 65 81); transition: background-color 0.2s; }\r\n        .form-radio:checked { background-color: currentColor; border-color: currentColor; background-image: url(\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e\"); }\r\n        .form-radio:focus { outline: 2px solid transparent; outline-offset: 2px; box-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); }\r\n\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalNovoAluno;\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 692, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/components/ModalEditarAluno.tsx"],"sourcesContent":["// components/ModalEditarAluno.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { supabase } from '../lib/supabaseClient';\r\nimport { Loader2 } from 'lucide-react';\r\nimport type { Aluno } from '../types'; // Importa o tipo Aluno\r\n\r\n// Define os tipos de status explicitamente\r\ntype StatusMensalidade = 'paga' | 'proximo' | 'vencida';\r\n\r\ninterface ModalEditarAlunoProps {\r\n  aluno: Aluno; // O aluno que está sendo editado\r\n  onClose: () => void;\r\n  onAlunoEditado: () => void; // Callback após sucesso\r\n}\r\n\r\nconst ModalEditarAluno: React.FC<ModalEditarAlunoProps> = ({ aluno, onClose, onAlunoEditado }) => {\r\n  \r\n  // --- CORREÇÃO PRINCIPAL: Inicializa os estados com os dados do 'aluno' ---\r\n  const [nome, setNome] = useState(aluno.nome_aluno);\r\n  const [nomePai, setNomePai] = useState(aluno.nome_pai || '');\r\n  const [emailPai, setEmailPai] = useState(aluno.email_pai);\r\n  const [valor, setValor] = useState(aluno.valor_mensalidade || 0);\r\n  \r\n  // Formata a data vinda do Supabase (ex: \"2025-10-30\") para o input type=\"date\"\r\n  // Adiciona 'T00:00:00' para evitar problemas de fuso horário (Timezone)\r\n  const [vencimento, setVencimento] = useState(\r\n    aluno.data_vencimento_mensalidade ? new Date(aluno.data_vencimento_mensalidade + 'T00:00:00').toISOString().slice(0, 10) : ''\r\n  );\r\n  \r\n  // --- A CORREÇÃO CRÍTICA ESTÁ AQUI ---\r\n  // O estado 'statusMensalidade' agora começa com o status atual do aluno\r\n  const [statusMensalidade, setStatusMensalidade] = useState<StatusMensalidade>(aluno.status_mensalidade);\r\n  \r\n  const [loadingModal, setLoadingModal] = useState(false);\r\n  const [errorModal, setErrorModal] = useState<string | null>(null);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoadingModal(true);\r\n    setErrorModal(null);\r\n\r\n    // Payload de atualização\r\n    const payload = {\r\n      nome_aluno: nome,\r\n      nome_pai: nomePai,\r\n      email_pai: emailPai,\r\n      valor_mensalidade: valor,\r\n      data_vencimento_mensalidade: new Date(vencimento).toISOString(),\r\n      status_mensalidade: statusMensalidade, // Envia o status selecionado (seja o original ou o novo)\r\n    };\r\n\r\n    const { error } = await supabase\r\n      .from('alunos')\r\n      .update(payload)\r\n      .eq('id', aluno.id); // Garante que estamos atualizando o aluno correto\r\n\r\n    if (error) {\r\n      console.error('Erro ao atualizar aluno:', error);\r\n      setErrorModal('Erro ao atualizar atleta. Verifique os dados e tente novamente.');\r\n      setLoadingModal(false);\r\n    } else {\r\n      setLoadingModal(false);\r\n      onAlunoEditado(); // Fecha o modal e recarrega a lista na página /elenco\r\n    }\r\n  };\r\n\r\n  return (\r\n    // Fundo semi-transparente (Overlay)\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center backdrop-blur-sm bg-black/60\">\r\n      {/* Container do Modal */}\r\n      <div className=\"bg-gray-800 p-8 rounded-xl z-10 w-full max-w-md border border-gray-700 shadow-xl\">\r\n        <h2 className=\"text-xl font-bold mb-6 text-white\">Editar Atleta</h2>\r\n        \r\n        {errorModal && (\r\n          <div className=\"mb-4 p-3 bg-red-900/50 text-red-300 rounded-lg border border-red-800 text-sm\">\r\n            {errorModal}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          \r\n          <div>\r\n            <label htmlFor=\"edit-nome-atleta\" className=\"label-dribla\">Nome do Atleta*</label>\r\n            <input\r\n              id=\"edit-nome-atleta\"\r\n              value={nome}\r\n              onChange={(e) => setNome(e.target.value)}\r\n              required\r\n              className=\"input-dribla\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label htmlFor=\"edit-nome-pai\" className=\"label-dribla\">Nome do Responsável</label>\r\n              <input\r\n                id=\"edit-nome-pai\"\r\n                value={nomePai}\r\n                onChange={(e) => setNomePai(e.target.value)}\r\n                className=\"input-dribla\"\r\n              />\r\n            </div>\r\n             <div>\r\n              <label htmlFor=\"edit-email-pai\" className=\"label-dribla\">Email do Responsável*</label>\r\n              <input\r\n                id=\"edit-email-pai\"\r\n                value={emailPai}\r\n                onChange={(e) => setEmailPai(e.target.value)}\r\n                type=\"email\"\r\n                required\r\n                className=\"input-dribla\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label htmlFor=\"edit-valor\" className=\"label-dribla\">Valor Mensalidade (R$)*</label>\r\n              <input\r\n                id=\"edit-valor\"\r\n                value={valor}\r\n                onChange={(e) => setValor(Number(e.target.value))}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                required\r\n                className=\"input-dribla\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"edit-vencimento\" className=\"label-dribla\">Próximo Vencimento*</label>\r\n              <input\r\n                id=\"edit-vencimento\"\r\n                value={vencimento}\r\n                onChange={(e) => setVencimento(e.target.value)}\r\n                type=\"date\"\r\n                required\r\n                className=\"input-dribla\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* --- CAMPO DE STATUS (AGORA UM <select>) --- */}\r\n          <div>\r\n            <label htmlFor=\"edit-status\" className=\"label-dribla\">Status da Mensalidade</label>\r\n            <select \r\n              id=\"edit-status\"\r\n              value={statusMensalidade} // O valor é controlado pelo estado\r\n              onChange={(e) => setStatusMensalidade(e.target.value as StatusMensalidade)} // Atualiza o estado\r\n              className=\"input-dribla\"\r\n            >\r\n              <option value=\"paga\">Pago (Em dia)</option>\r\n              <option value=\"proximo\">Próximo a Vencer</option>\r\n              <option value=\"vencida\">Vencido (Não Pago)</option>\r\n            </select>\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              Altere o status manualmente. A automação (Cérebro) corrigirá isso na próxima madrugada se a data não corresponder.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Botões de Ação */}\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              disabled={loadingModal}\r\n              className=\"btn-secondary\" // Classe global\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loadingModal}\r\n              className=\"btn-primary\" // Classe global\r\n            >\r\n              {loadingModal ? (\r\n                <Loader2 className=\"w-5 h-5 animate-spin\" />\r\n              ) : (\r\n                'Salvar Alterações'\r\n              )}\r\n            </button>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalEditarAluno;\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/components/ModalConfirmarExclusao.tsx"],"sourcesContent":["// components/ModalConfirmarExclusao.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { supabase } from '../lib/supabaseClient';\r\nimport { Loader2, AlertTriangle } from 'lucide-react';\r\nimport type { Aluno } from '../types/aluno.ts';\r\n\r\ninterface ModalConfirmarExclusaoProps {\r\n  aluno: Aluno | null;\r\n  onClose: () => void;\r\n  onAlunoExcluido: () => void;\r\n}\r\n\r\nconst ModalConfirmarExclusao: React.FC<ModalConfirmarExclusaoProps> = ({ aluno, onClose, onAlunoExcluido }) => {\r\n  const [loadingDelete, setLoadingDelete] = useState(false);\r\n  const [errorDelete, setErrorDelete] = useState<string | null>(null);\r\n\r\n  const handleConfirm = async () => {\r\n    if (!aluno) return;\r\n\r\n    setLoadingDelete(true);\r\n    setErrorDelete(null);\r\n\r\n    try {\r\n      const { error } = await supabase\r\n        .from('alunos')\r\n        .delete()\r\n        .eq('id', aluno.id);\r\n\r\n      if (error) {\r\n        console.error(\"Erro ao excluir aluno:\", error);\r\n        throw new Error(\"Não foi possível excluir o atleta. Tente novamente.\");\r\n      }\r\n\r\n      setLoadingDelete(false);\r\n      onAlunoExcluido(); // Fecha o modal e recarrega a lista\r\n\r\n    } catch (err: any) {\r\n      setErrorDelete(err.message);\r\n      setLoadingDelete(false);\r\n    }\r\n  };\r\n\r\n  if (!aluno) return null; // Não renderiza se não houver aluno para excluir\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70 backdrop-blur-sm\">\r\n      <div className=\"bg-gray-800 p-8 rounded-xl shadow-2xl z-10 w-full max-w-md border border-gray-700\">\r\n        <div className=\"flex items-center justify-center mb-4\">\r\n          <AlertTriangle className=\"w-10 h-10 text-red-500 mr-3\" />\r\n          <h2 className=\"text-xl font-bold text-white\">Confirmar Exclusão</h2>\r\n        </div>\r\n\r\n        <p className=\"text-gray-300 text-center mb-6\">\r\n          Tem certeza que deseja excluir o atleta <strong className=\"text-white\">{aluno.nome_aluno}</strong>? Esta ação não pode ser desfeita.\r\n        </p>\r\n\r\n        {errorDelete && <p className=\"text-red-400 bg-red-900/50 p-3 rounded mb-4 text-center\">{errorDelete}</p>}\r\n\r\n        <div className=\"flex justify-center space-x-4\">\r\n          <button onClick={onClose} disabled={loadingDelete} className=\"btn-secondary\">\r\n            Cancelar\r\n          </button>\r\n          <button\r\n            onClick={handleConfirm}\r\n            disabled={loadingDelete}\r\n            className=\"btn-danger flex items-center\" // Usaremos uma classe btn-danger\r\n          >\r\n            {loadingDelete ? <Loader2 className=\"w-5 h-5 animate-spin mr-2\" /> : null}\r\n            {loadingDelete ? 'Excluindo...' : 'Confirmar Exclusão'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n       {/* Adiciona estilo para btn-danger */}\r\n       <style jsx global>{`\r\n        /* ... outros estilos ... */\r\n        .btn-danger {\r\n            padding-left: 1.25rem; padding-right: 1.25rem; padding-top: 0.5rem; padding-bottom: 0.5rem;\r\n            border-radius: 0.5rem;\r\n            background-color: rgb(220 38 38 / 1); /* bg-red-600 */\r\n            color: rgb(255 255 255 / 1); /* text-white */\r\n            font-weight: 600; /* font-semibold */\r\n            transition-property: background-color; transition-duration: 200ms;\r\n        }\r\n        .btn-danger:hover {\r\n            background-color: rgb(185 28 28 / 1); /* hover:bg-red-700 */\r\n        }\r\n        .btn-danger:disabled {\r\n             opacity: 0.7; cursor: not-allowed;\r\n         }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalConfirmarExclusao;\r\n"],"names":[],"mappings":"AAAA,wCAAwC;;;;;;;AAExC;AACA;AACA;AAAA;;;;;;AASA,MAAM,yBAAgE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE;IACxG,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,+GAAQ,EAAC;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,+GAAQ,EAAgB;IAE9D,MAAM,gBAAgB;QACpB,IAAI,CAAC,OAAO;QAEZ,iBAAiB;QACjB,eAAe;QAEf,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0HAAQ,CAC7B,IAAI,CAAC,UACL,MAAM,GACN,EAAE,CAAC,MAAM,MAAM,EAAE;YAEpB,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,0BAA0B;gBACxC,MAAM,IAAI,MAAM;YAClB;YAEA,iBAAiB;YACjB,mBAAmB,oCAAoC;QAEzD,EAAE,OAAO,KAAU;YACjB,eAAe,IAAI,OAAO;YAC1B,iBAAiB;QACnB;IACF;IAEA,IAAI,CAAC,OAAO,OAAO,MAAM,iDAAiD;IAE1E,qBACE,qKAAC;kDAAc;;0BACb,qKAAC;0DAAc;;kCACb,qKAAC;kEAAc;;0CACb,qKAAC,kOAAa;gCAAC,WAAU;;;;;;0CACzB,qKAAC;0EAAa;0CAA+B;;;;;;;;;;;;kCAG/C,qKAAC;kEAAY;;4BAAiC;0CACJ,qKAAC;0EAAiB;0CAAc,MAAM,UAAU;;;;;;4BAAU;;;;;;;oBAGnG,6BAAe,qKAAC;kEAAY;kCAA2D;;;;;;kCAExF,qKAAC;kEAAc;;0CACb,qKAAC;gCAAO,SAAS;gCAAS,UAAU;0EAAyB;0CAAgB;;;;;;0CAG7E,qKAAC;gCACC,SAAS;gCACT,UAAU;0EACA;;oCAET,8BAAgB,qKAAC,gNAAO;wCAAC,WAAU;;;;;mFAAiC;oCACpE,gBAAgB,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwB9C;uCAEe","debugId":null}},
    {"offset": {"line": 1204, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/pages/elenco.tsx"],"sourcesContent":["// pages/elenco.tsx\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport Head from 'next/head';\r\nimport Layout from '../components/Layout';\r\nimport ModalNovoAluno from '../components/ModalNovoAluno';\r\nimport ModalEditarAluno from '../components/ModalEditarAluno';\r\nimport ModalConfirmarExclusao from '../components/ModalConfirmarExclusao';\r\nimport { supabase } from '../lib/supabaseClient';\r\nimport { useRouter } from 'next/router';\r\nimport { Loader2, Plus, Edit, Trash2, AlertTriangle, Clock, CheckCircle } from 'lucide-react';\r\nimport type { Aluno } from '../types'; // Importa o tipo Aluno\r\n\r\ntype StatusFiltro = 'todos' | 'vencida' | 'proximo' | 'paga';\r\ntype RealtimeStatus = 'vencida' | 'proximo' | 'paga';\r\n\r\n// Objeto de configuração para os chips de status (para consistência)\r\nconst statusMap: Record<RealtimeStatus, { texto: string; corFundo: string; corTexto: string; icone: React.ElementType }> = {\r\n  vencida: {\r\n    texto: 'Vencido',\r\n    corFundo: 'bg-red-100 dark:bg-dribla-orange/20',\r\n    corTexto: 'text-red-800 dark:text-dribla-orange',\r\n    icone: AlertTriangle,\r\n  },\r\n  proximo: {\r\n    texto: 'Próximo',\r\n    corFundo: 'bg-blue-100 dark:bg-blue-500/20',\r\n    corTexto: 'text-blue-800 dark:text-blue-400',\r\n    icone: Clock,\r\n  },\r\n  paga: {\r\n    texto: 'Pago',\r\n    corFundo: 'bg-green-100 dark:bg-dribla-green/20',\r\n    corTexto: 'text-green-800 dark:text-dribla-green',\r\n    icone: CheckCircle,\r\n  },\r\n};\r\n\r\n// --- FUNÇÃO HELPER: Calcula o status em tempo real ---\r\nconst getRealtimeStatus = (aluno: Aluno, hoje: Date): RealtimeStatus => {\r\n  const vencimento = new Date(aluno.data_vencimento_mensalidade + 'T00:00:00'); // Garante data local\r\n  vencimento.setHours(0, 0, 0, 0);\r\n\r\n  // 1. Se o status no DB já é 'vencida', está vencido.\r\n  if (aluno.status_mensalidade === 'vencida') {\r\n    return 'vencida';\r\n  }\r\n  \r\n  // 2. Se a data de vencimento já passou (e não está 'vencida' ainda)\r\n  if (vencimento < hoje) {\r\n    return 'vencida';\r\n  }\r\n\r\n  // 3. Se o status no DB é 'proximo', está próximo.\r\n  if (aluno.status_mensalidade === 'proximo') {\r\n    return 'proximo';\r\n  }\r\n\r\n  // 4. Se a data de vencimento é hoje ou nos próximos 5 dias\r\n  const cincoDias = new Date(hoje);\r\n  cincoDias.setDate(hoje.getDate() + 5);\r\n  if (vencimento >= hoje && vencimento <= cincoDias) {\r\n    return 'proximo';\r\n  }\r\n\r\n  // 5. Se não for nenhuma das anteriores, está 'paga'\r\n  return 'paga';\r\n};\r\n\r\n\r\nconst ElencoPage: React.FC = () => {\r\n  const router = useRouter();\r\n  \r\n  // Estados dos Modais\r\n  const [showNovoModal, setShowNovoModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  \r\n  // Estados de Dados e UI\r\n  const [allAlunos, setAllAlunos] = useState<Aluno[]>([]); // Guarda TODOS os alunos\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // Estados de Filtro e Seleção\r\n  const [currentFilter, setCurrentFilter] = useState<StatusFiltro>('todos');\r\n  const [editingAluno, setEditingAluno] = useState<Aluno | null>(null);\r\n  const [deletingAluno, setDeletingAluno] = useState<Aluno | null>(null);\r\n\r\n  // --- 1. BUSCA INICIAL DE DADOS ---\r\n  const fetchAlunos = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const { data: { user } } = await supabase.auth.getUser();\r\n    if (!user) {\r\n      router.push('/login');\r\n      return;\r\n    }\r\n\r\n    const { data, error: fetchError } = await supabase\r\n      .from('alunos')\r\n      .select('*')\r\n      .eq('id_treinador', user.id)\r\n      .order('nome_aluno', { ascending: true });\r\n\r\n    if (fetchError) {\r\n      console.error(\"Erro ao buscar alunos:\", fetchError);\r\n      setError(\"Não foi possível carregar o elenco. Tente novamente.\");\r\n    } else {\r\n      setAllAlunos(data || []);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Busca os dados na primeira carga da página\r\n  useEffect(() => {\r\n    fetchAlunos();\r\n  }, []); // Dependência vazia, roda só uma vez\r\n\r\n  // --- 2. CÁLCULO DOS STATUS EM TEMPO REAL ---\r\n  // Roda sempre que a lista 'allAlunos' mudar\r\n  const processedAlunos = useMemo(() => {\r\n    const hoje = new Date();\r\n    hoje.setHours(0, 0, 0, 0); // Zera a hora para comparações justas\r\n\r\n    return allAlunos.map(aluno => ({\r\n      ...aluno,\r\n      // Adiciona a propriedade 'realtimeStatus' calculada\r\n      realtimeStatus: getRealtimeStatus(aluno, hoje),\r\n    }));\r\n  }, [allAlunos]);\r\n\r\n  // --- 3. CÁLCULO DOS CONTADORES (FILTROS) ---\r\n  const filterCounts = useMemo(() => {\r\n    return {\r\n      todos: processedAlunos.length,\r\n      vencida: processedAlunos.filter(a => a.realtimeStatus === 'vencida').length,\r\n      proximo: processedAlunos.filter(a => a.realtimeStatus === 'proximo').length,\r\n      paga: processedAlunos.filter(a => a.realtimeStatus === 'paga').length,\r\n    };\r\n  }, [processedAlunos]);\r\n\r\n  // --- 4. FILTRAGEM DA LISTA EXIBIDA ---\r\n  const filteredAlunos = useMemo(() => {\r\n    if (currentFilter === 'todos') {\r\n      return processedAlunos;\r\n    }\r\n    return processedAlunos.filter(aluno => aluno.realtimeStatus === currentFilter);\r\n  }, [processedAlunos, currentFilter]);\r\n\r\n\r\n  // --- 5. FUNÇÕES DE CALLBACK DOS MODAIS ---\r\n  \r\n  // Adicionar\r\n  const handleAlunoAdicionado = () => {\r\n    setShowNovoModal(false);\r\n    fetchAlunos(); // Recarrega a lista inteira\r\n  };\r\n\r\n  // Editar\r\n  const openEditModal = (aluno: Aluno) => {\r\n    setEditingAluno(aluno);\r\n    setShowEditModal(true);\r\n  };\r\n  const handleAlunoEditado = () => {\r\n    setShowEditModal(false);\r\n    setEditingAluno(null);\r\n    fetchAlunos(); // Recarrega a lista inteira\r\n  };\r\n\r\n  // Excluir\r\n  const openDeleteConfirm = (aluno: Aluno) => {\r\n    setDeletingAluno(aluno);\r\n    setShowDeleteConfirm(true);\r\n  };\r\n  const handleAlunoExcluido = () => {\r\n    setShowDeleteConfirm(false);\r\n    setDeletingAluno(null);\r\n    fetchAlunos(); // Recarrega a lista inteira\r\n  };\r\n\r\n  // --- 6. FUNÇÕES DE FORMATAÇÃO ---\r\n  const formatDate = (dateString: string) => {\r\n    try {\r\n      // Adiciona T00:00:00 para garantir que seja interpretado como data local\r\n      const date = new Date(dateString + 'T00:00:00');\r\n      const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: '2-digit', day: '2-digit', timeZone: 'UTC' };\r\n      return date.toLocaleDateString('pt-BR', options);\r\n    } catch (e) {\r\n      return 'Data Inválida';\r\n    }\r\n  };\r\n  const formatCurrency = (value: number | null) => {\r\n    if (value === null) return 'N/A';\r\n    return value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Dribla | Elenco</title>\r\n      </Head>\r\n      <Layout title=\"Gestão de Alunos (Elenco)\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-2xl font-semibold text-white\">Meu Elenco</h1>\r\n          <button \r\n            onClick={() => setShowNovoModal(true)} \r\n            className=\"btn-primary\" // Usa classe global\r\n          >\r\n            <Plus className=\"w-5 h-5 mr-2\" /> Novo Atleta\r\n          </button>\r\n        </div>\r\n\r\n        {/* Botões de Filtro (AGORA COM CONTADORES DINÂMICOS) */}\r\n        <div className=\"flex space-x-2 mb-6\">\r\n          <button \r\n            onClick={() => setCurrentFilter('todos')} \r\n            className={`px-4 py-2 rounded-lg text-sm font-medium ${currentFilter === 'todos' ? 'bg-dribla-green text-gray-900' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`}\r\n          >\r\n            Todos ({filterCounts.todos})\r\n          </button>\r\n          <button \r\n            onClick={() => setCurrentFilter('vencida')} \r\n            className={`px-4 py-2 rounded-lg text-sm font-medium ${currentFilter === 'vencida' ? 'bg-dribla-orange text-gray-900' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`}\r\n          >\r\n            Atrasados ({filterCounts.vencida})\r\n          </button>\r\n          <button \r\n            onClick={() => setCurrentFilter('proximo')} \r\n            className={`px-4 py-2 rounded-lg text-sm font-medium ${currentFilter === 'proximo' ? 'bg-blue-500 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`}\r\n          >\r\n            Próximos ({filterCounts.proximo})\r\n          </button>\r\n          <button \r\n            onClick={() => setCurrentFilter('paga')} \r\n            className={`px-4 py-2 rounded-lg text-sm font-medium ${currentFilter === 'paga' ? 'bg-dribla-green/70 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`}\r\n          >\r\n            Em Dia ({filterCounts.paga})\r\n          </button>\r\n        </div>\r\n\r\n        {/* Feedback Visual (Loading, Erro, Vazio) */}\r\n        {loading && (\r\n          <div className=\"flex justify-center items-center py-10\">\r\n            <Loader2 className=\"w-10 h-10 text-dribla-green animate-spin\" />\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <p className=\"p-6 bg-red-900/50 text-red-300 text-center rounded-lg border border-red-800\">{error}</p>\r\n        )}\r\n        {!loading && !error && filteredAlunos.length === 0 && (\r\n          <div className=\"bg-gray-800 p-6 rounded-lg text-center text-gray-400 border border-gray-700\">\r\n            <p className=\"text-lg font-semibold mb-2\">Nenhum atleta encontrado neste filtro.</p>\r\n            <p>Tente um filtro diferente ou adicione um novo atleta.</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Tabela de Alunos (Renderiza a lista FILTRADA) */}\r\n        {!loading && !error && filteredAlunos.length > 0 && (\r\n          <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl border border-gray-700\">\r\n            <table className=\"min-w-full divide-y divide-gray-700\">\r\n              <thead className=\"bg-gray-900\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">Aluno</th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">Responsável</th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">Vencimento</th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">Valor</th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">Status (Tempo Real)</th>\r\n                  <th scope=\"col\" className=\"relative px-6 py-3\"><span className=\"sr-only\">Ações</span></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-700\">\r\n                {filteredAlunos.map((aluno) => {\r\n                  // Pega a configuração de estilo do status calculado\r\n                  const statusInfo = statusMap[aluno.realtimeStatus];\r\n\r\n                  return (\r\n                    <tr key={aluno.id} className=\"hover:bg-gray-700/50 transition duration-150\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-white\">{aluno.nome_aluno}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-300\">{aluno.nome_pai || 'N/A'}</div>\r\n                        <div className=\"text-xs text-gray-500\">{aluno.email_pai}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-300\">{formatDate(aluno.data_vencimento_mensalidade)}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-300\">{formatCurrency(aluno.valor_mensalidade)}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        {/* Chip de Status (com base no status em tempo real) */}\r\n                        <span className={`px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${statusInfo.corFundo} ${statusInfo.corTexto}`}>\r\n                          <statusInfo.icone className=\"w-4 h-4 mr-1.5\" />\r\n                          {statusInfo.texto}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-3\">\r\n                        <button onClick={() => openEditModal(aluno)} className=\"text-blue-400 hover:text-blue-300 transition duration-150\">\r\n                          <Edit className=\"w-5 h-5\" />\r\n                        </button>\r\n                        <button onClick={() => openDeleteConfirm(aluno)} className=\"text-red-500 hover:text-red-400 transition duration-150\">\r\n                          <Trash2 className=\"w-5 h-5\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n\r\n        {/* Modais (Renderização Condicional) */}\r\n        {showNovoModal && (\r\n          <ModalNovoAluno \r\n            onClose={() => setShowNovoModal(false)}\r\n            onAlunoAdicionado={handleAlunoAdicionado}\r\n            // Passa a contagem atual e o limite (do dashboard) para o modal\r\n            contagemAtualAlunos={allAlunos.length}\r\n            limiteAlunos={30} // Substituir por dados reais do plano do treinador\r\n          />\r\n        )}\r\n        {showEditModal && editingAluno && (\r\n          <ModalEditarAluno\r\n            aluno={editingAluno}\r\n            onClose={() => { setShowEditModal(false); setEditingAluno(null); }}\r\n            onAlunoEditado={handleAlunoEditado}\r\n          />\r\n        )}\r\n        {showDeleteConfirm && deletingAluno && (\r\n          <ModalConfirmarExclusao\r\n            aluno={deletingAluno}\r\n            onClose={() => { setShowDeleteConfirm(false); setDeletingAluno(null); }}\r\n            onAlunoExcluido={handleAlunoExcluido}\r\n          />\r\n        )}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ElencoPage;\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}