{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/lib/supabaseClient.ts"],"sourcesContent":["// lib/supabaseClient.ts\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Variáveis de ambiente devem ser configuradas no Vercel e no .env.local\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\n// Verifica se as chaves existem antes de criar o cliente\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  // Lançar um erro claro para o ambiente de desenvolvimento/compilação\r\n  throw new Error(\"As variáveis de ambiente NEXT_PUBLIC_SUPABASE_URL e NEXT_PUBLIC_SUPABASE_ANON_KEY devem estar definidas.\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAExB;;AAEA,yEAAyE;AACzE,MAAM;AACN,MAAM;AAEN,yDAAyD;AACzD;;AAKO,MAAM,WAAW,IAAA,iKAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/components/Layout.tsx"],"sourcesContent":["// components/Layout.tsx\r\n\r\nimport React, { ReactNode } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router'; // Para destacar o link ativo\r\nimport { Home, Users, CreditCard, User, LogOut } from 'lucide-react'; // Ícones\r\nimport { supabase } from '../lib/supabaseClient'; // Para o botão de logout\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n  title: string; // Título da página atual a ser exibido no cabeçalho\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children, title }) => {\r\n  const router = useRouter();\r\n\r\n  // Função para fazer logout\r\n  const handleLogout = async () => {\r\n    const { error } = await supabase.auth.signOut();\r\n    if (!error) {\r\n      router.push('/login'); // Redireciona para login após logout\r\n    } else {\r\n      console.error(\"Erro ao fazer logout:\", error);\r\n      // Adicionar feedback visual de erro aqui, se necessário (ex: toast)\r\n    }\r\n  };\r\n\r\n  // Itens da navegação da Sidebar\r\n  const navItems = [\r\n    { href: '/home-acao', label: 'Dashboard', icon: Home },\r\n    { href: '/elenco', label: 'Elenco', icon: Users },\r\n    { href: '/financeiro', label: 'Financeiro', icon: CreditCard }, // <-- LINK ADICIONADO\r\n    // { href: '/configuracoes', label: 'Configurações', icon: Settings }, // Exemplo para futuras páginas\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex bg-dribla-graphite text-dribla-light\">\r\n      {/* Sidebar Fixa */}\r\n      <aside className=\"w-64 bg-gray-900 p-4 flex flex-col justify-between border-r border-gray-800 shadow-lg\">\r\n        {/* Parte Superior: Logo e Navegação Principal */}\r\n        <div>\r\n          <div className=\"mb-8 text-center pt-2\">\r\n            {/* Logo Clicável */}\r\n             <Link href=\"/home-acao\" className=\"text-3xl font-bold text-dribla-green tracking-wider inline-block\">\r\n               DRIBLA\r\n             </Link>\r\n          </div>\r\n          {/* Menu de Navegação */}\r\n          <nav className=\"space-y-2\">\r\n            {navItems.map((item) => {\r\n              const isActive = router.pathname === item.href;\r\n              return (\r\n                <Link\r\n                  key={item.href}\r\n                  href={item.href}\r\n                  // Estilos do link, incluindo o estado ativo\r\n                  className={`flex items-center px-4 py-2.5 rounded-lg transition duration-200 ease-in-out group ${\r\n                    isActive\r\n                      ? 'bg-dribla-green text-gray-900 font-semibold shadow-md' // Estilo Ativo\r\n                      : 'text-gray-400 hover:bg-gray-800 hover:text-white' // Estilo Inativo/Hover\r\n                  }`}\r\n                >\r\n                  <item.icon className={`w-5 h-5 mr-3 transition duration-200 ${isActive ? 'text-gray-900' : 'text-gray-500 group-hover:text-white'}`} />\r\n                  {item.label}\r\n                </Link>\r\n              );\r\n            })}\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Parte Inferior: Perfil (Futuro) e Logout */}\r\n        <div className=\"border-t border-gray-700 pt-4 mt-4 space-y-2\">\r\n           {/* Link para Perfil (Ainda não criado) - Descomentar quando a página existir */}\r\n           {/* <Link href=\"/perfil\" className={`flex items-center px-4 py-2.5 rounded-lg transition duration-200 ${ router.pathname === '/perfil' ? 'bg-gray-700 text-white' : 'text-gray-400 hover:bg-gray-800 hover:text-white'}`}>\r\n             <User className=\"w-5 h-5 mr-3\" /> Perfil\r\n           </Link> */}\r\n           {/* Botão de Logout */}\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"w-full flex items-center px-4 py-2.5 rounded-lg text-gray-400 hover:bg-red-800/50 hover:text-red-300 transition duration-200 group\"\r\n          >\r\n            <LogOut className=\"w-5 h-5 mr-3 text-gray-500 group-hover:text-red-300 transition duration-200\" />\r\n            Sair\r\n          </button>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Conteúdo Principal Flexível */}\r\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\r\n         {/* Cabeçalho Superior Fixo (Opcional, mas útil) */}\r\n         <header className=\"bg-gray-850 p-4 border-b border-gray-700 shadow-sm sticky top-0 z-10 flex items-center h-16\">\r\n            {/* Título da Página Atual */}\r\n            <h1 className=\"text-xl font-semibold text-white\">{title}</h1>\r\n            {/* Pode adicionar outras informações aqui, como nome do usuário */}\r\n         </header>\r\n\r\n         {/* Área de Conteúdo com Scroll */}\r\n         <main className=\"flex-1 p-6 md:p-10 overflow-y-auto bg-dribla-graphite\">\r\n            {children}\r\n         </main>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;;AAGxB;AACA,mNAAyC,6BAA6B;AACtE,qUAAsE,SAAS;AAA/E;AAAA;AAAA;AACA,oMAAkD,yBAAyB;;;;;;AAO3E,MAAM,SAAgC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE;IACxD,MAAM,SAAS,IAAA,oIAAS;IAExB,2BAA2B;IAC3B,MAAM,eAAe;QACnB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0HAAQ,CAAC,IAAI,CAAC,OAAO;QAC7C,IAAI,CAAC,OAAO;YACV,OAAO,IAAI,CAAC,WAAW,qCAAqC;QAC9D,OAAO;YACL,QAAQ,KAAK,CAAC,yBAAyB;QACvC,oEAAoE;QACtE;IACF;IAEA,gCAAgC;IAChC,MAAM,WAAW;QACf;YAAE,MAAM;YAAc,OAAO;YAAa,MAAM,mMAAI;QAAC;QACrD;YAAE,MAAM;YAAW,OAAO;YAAU,MAAM,sMAAK;QAAC;QAChD;YAAE,MAAM;YAAe,OAAO;YAAc,MAAM,yNAAU;QAAC;KAE9D;IAED,qBACE,qKAAC;QAAI,WAAU;;0BAEb,qKAAC;gBAAM,WAAU;;kCAEf,qKAAC;;0CACC,qKAAC;gCAAI,WAAU;0CAEZ,cAAA,qKAAC,gIAAI;oCAAC,MAAK;oCAAa,WAAU;8CAAmE;;;;;;;;;;;0CAKxG,qKAAC;gCAAI,WAAU;0CACZ,SAAS,GAAG,CAAC,CAAC;oCACb,MAAM,WAAW,OAAO,QAAQ,KAAK,KAAK,IAAI;oCAC9C,qBACE,qKAAC,gIAAI;wCAEH,MAAM,KAAK,IAAI;wCACf,4CAA4C;wCAC5C,WAAW,CAAC,mFAAmF,EAC7F,WACI,wDAAwD,eAAe;2CACvE,mDAAmD,uBAAuB;0CAC9E;;0DAEF,qKAAC,KAAK,IAAI;gDAAC,WAAW,CAAC,qCAAqC,EAAE,WAAW,kBAAkB,wCAAwC;;;;;;4CAClI,KAAK,KAAK;;uCAVN,KAAK,IAAI;;;;;gCAapB;;;;;;;;;;;;kCAKJ,qKAAC;wBAAI,WAAU;kCAMb,cAAA,qKAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,qKAAC,6MAAM;oCAAC,WAAU;;;;;;gCAAgF;;;;;;;;;;;;;;;;;;0BAOxG,qKAAC;gBAAI,WAAU;;kCAEZ,qKAAC;wBAAO,WAAU;kCAEf,cAAA,qKAAC;4BAAG,WAAU;sCAAoC;;;;;;;;;;;kCAKrD,qKAAC;wBAAK,WAAU;kCACZ;;;;;;;;;;;;;;;;;;AAMb;uCAEe","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/pages/planos.tsx"],"sourcesContent":["// pages/planos.tsx\r\n\r\nimport React from 'react';\r\nimport Head from 'next/head';\r\nimport Layout from '../components/Layout'; // Layout principal com sidebar\r\nimport Link from 'next/link';\r\nimport { Check } from 'lucide-react'; // Ícones\r\n\r\n// Componente para o Card do Plano\r\ninterface PlanoCardProps {\r\n  nome: string;\r\n  preco: string;\r\n  limiteAlunos: string;\r\n  beneficios: string[];\r\n  destaque?: boolean; // Para destacar o plano VIP ou recomendado\r\n  planoQuery: 'VIP' | 'PREMIUM'; // Para o link do checkout\r\n}\r\n\r\nconst PlanoCard: React.FC<PlanoCardProps> = ({ nome, preco, limiteAlunos, beneficios, destaque = false, planoQuery }) => {\r\n  return (\r\n    <div className={`relative p-8 rounded-xl border ${ // Adicionado 'relative' para o span de destaque\r\n      destaque ? 'border-dribla-green bg-gray-800 shadow-lg scale-105' : 'border-gray-700 bg-gray-850 hover:border-gray-600'\r\n    } transition duration-300 flex flex-col`}>\r\n      {destaque && (\r\n        <span className=\"absolute top-0 right-0 -mt-3 -mr-3 px-3 py-1 bg-dribla-green text-gray-900 text-xs font-bold rounded-full shadow\">\r\n          Recomendado\r\n        </span>\r\n      )}\r\n      <h3 className={`text-2xl font-bold mb-4 ${destaque ? 'text-dribla-green' : 'text-white'}`}>{nome}</h3>\r\n      <p className=\"text-4xl font-extrabold text-white mb-1\">{preco}<span className=\"text-lg font-normal text-gray-400\">/mês</span></p>\r\n      <p className=\"text-sm text-gray-400 mb-6\">{limiteAlunos} Alunos</p>\r\n\r\n      <ul className=\"space-y-3 mb-8 flex-grow\">\r\n        {beneficios.map((beneficio, index) => (\r\n          <li key={index} className=\"flex items-start\">\r\n            <Check className=\"w-5 h-5 text-dribla-green mr-2 flex-shrink-0 mt-0.5\" />\r\n            <span className=\"text-gray-300 text-sm\">{beneficio}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <Link href={`/checkout?plano=${planoQuery}`}>\r\n        <button className={`w-full py-3 rounded-lg font-bold transition duration-200 ${\r\n          destaque ? 'bg-dribla-green text-gray-900 hover:bg-green-600' : 'bg-gray-700 text-white hover:bg-dribla-green hover:text-gray-900'\r\n        }`}>\r\n          Selecionar Plano\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst PlanosPage: React.FC = () => {\r\n  // === CORREÇÃO AQUI: Adicionado \"as const\" ===\r\n  // Isso informa ao TypeScript que os valores são literais e fixos\r\n  const planos = [\r\n    {\r\n      nome: 'Plano VIP',\r\n      preco: 'R$ 59',\r\n      limiteAlunos: 'Até 150',\r\n      beneficios: [\r\n        'Gestão completa de alunos',\r\n        'Painel de Status Financeiro',\r\n        'Envio automático de e-mails de cobrança',\r\n        'Relatórios básicos de inadimplência',\r\n        'Suporte via E-mail',\r\n      ],\r\n      destaque: true,\r\n      planoQuery: 'VIP', // TypeScript agora sabe que é 'VIP', não string\r\n    },\r\n    {\r\n      nome: 'Plano Premium',\r\n      preco: 'R$ 99',\r\n      limiteAlunos: 'Ilimitado',\r\n      beneficios: [\r\n        'Tudo do Plano VIP',\r\n        'Mensagens de cobrança personalizáveis',\r\n        'Relatórios financeiros avançados',\r\n        'Acesso prioritário a novas funcionalidades',\r\n        'Suporte Prioritário',\r\n      ],\r\n      destaque: false,\r\n      planoQuery: 'PREMIUM', // TypeScript agora sabe que é 'PREMIUM', não string\r\n    },\r\n  ] as const; // <--- A asserção \"as const\" é aplicada aqui\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Dribla | Escolha seu Plano</title>\r\n      </Head>\r\n      <Layout title=\"Escolha seu Plano\">\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl font-bold mb-3 text-white\">Planos Flexíveis para sua Escolinha</h1>\r\n          <p className=\"text-lg text-gray-400 max-w-2xl mx-auto\">\r\n            Escolha a opção que melhor se adapta ao seu crescimento e comece a recuperar receita hoje mesmo.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Grid dos Planos */}\r\n        {/* Ajustado para centralizar melhor com 2 planos */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\r\n          {planos.map((plano) => (\r\n            <PlanoCard\r\n              key={plano.nome}\r\n              nome={plano.nome}\r\n              preco={plano.preco}\r\n              limiteAlunos={plano.limiteAlunos}\r\n              beneficios={plano.beneficios}\r\n              destaque={plano.destaque}\r\n              planoQuery={plano.planoQuery} // Agora o tipo bate corretamente\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"text-center mt-12 text-sm text-gray-500\">\r\n            <p>Precisa de ajuda para escolher? <Link href=\"/contato\" className=\"text-dribla-green hover:underline\">Fale Conosco</Link>.</p>\r\n            <p className='mt-2'>Todos os planos podem ser cancelados a qualquer momento.</p>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlanosPage;\r\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;;AAGnB;AACA,oMAA2C,+BAA+B;AAC1E;AACA,yUAAsC,SAAS;;;;;;AAY/C,MAAM,YAAsC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,KAAK,EAAE,UAAU,EAAE;IAClH,qBACE,qKAAC;QAAI,WAAW,CAAC,+BAA+B,EAC9C,WAAW,wDAAwD,oDACpE,sCAAsC,CAAC;;YACrC,0BACC,qKAAC;gBAAK,WAAU;0BAAmH;;;;;;0BAIrI,qKAAC;gBAAG,WAAW,CAAC,wBAAwB,EAAE,WAAW,sBAAsB,cAAc;0BAAG;;;;;;0BAC5F,qKAAC;gBAAE,WAAU;;oBAA2C;kCAAM,qKAAC;wBAAK,WAAU;kCAAoC;;;;;;;;;;;;0BAClH,qKAAC;gBAAE,WAAU;;oBAA8B;oBAAa;;;;;;;0BAExD,qKAAC;gBAAG,WAAU;0BACX,WAAW,GAAG,CAAC,CAAC,WAAW,sBAC1B,qKAAC;wBAAe,WAAU;;0CACxB,qKAAC,sMAAK;gCAAC,WAAU;;;;;;0CACjB,qKAAC;gCAAK,WAAU;0CAAyB;;;;;;;uBAFlC;;;;;;;;;;0BAOb,qKAAC,gIAAI;gBAAC,MAAM,CAAC,gBAAgB,EAAE,YAAY;0BACzC,cAAA,qKAAC;oBAAO,WAAW,CAAC,yDAAyD,EAC3E,WAAW,qDAAqD,oEAChE;8BAAE;;;;;;;;;;;;;;;;;AAMZ;AAGA,MAAM,aAAuB;IAC3B,+CAA+C;IAC/C,iEAAiE;IACjE,MAAM,SAAS;QACb;YACE,MAAM;YACN,OAAO;YACP,cAAc;YACd,YAAY;gBACV;gBACA;gBACA;gBACA;gBACA;aACD;YACD,UAAU;YACV,YAAY;QACd;QACA;YACE,MAAM;YACN,OAAO;YACP,cAAc;YACd,YAAY;gBACV;gBACA;gBACA;gBACA;gBACA;aACD;YACD,UAAU;YACV,YAAY;QACd;KACD,EAAW,6CAA6C;IAEzD,qBACE;;0BACE,qKAAC,gIAAI;0BACH,cAAA,qKAAC;8BAAM;;;;;;;;;;;0BAET,qKAAC,yHAAM;gBAAC,OAAM;;kCACZ,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAG,WAAU;0CAAqC;;;;;;0CACnD,qKAAC;gCAAE,WAAU;0CAA0C;;;;;;;;;;;;kCAOzD,qKAAC;wBAAI,WAAU;kCACZ,OAAO,GAAG,CAAC,CAAC,sBACX,qKAAC;gCAEC,MAAM,MAAM,IAAI;gCAChB,OAAO,MAAM,KAAK;gCAClB,cAAc,MAAM,YAAY;gCAChC,YAAY,MAAM,UAAU;gCAC5B,UAAU,MAAM,QAAQ;gCACxB,YAAY,MAAM,UAAU;+BANvB,MAAM,IAAI;;;;;;;;;;kCAWrB,qKAAC;wBAAI,WAAU;;0CACX,qKAAC;;oCAAE;kDAAgC,qKAAC,gIAAI;wCAAC,MAAK;wCAAW,WAAU;kDAAoC;;;;;;oCAAmB;;;;;;;0CAC1H,qKAAC;gCAAE,WAAU;0CAAO;;;;;;;;;;;;;;;;;;;;AAKhC;uCAEe","debugId":null}}]
}