{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/lib/supabaseClient.ts"],"sourcesContent":["// lib/supabaseClient.ts\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Variáveis de ambiente devem ser configuradas no Vercel e no .env.local\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\n// Verifica se as chaves existem antes de criar o cliente\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  // Lançar um erro claro para o ambiente de desenvolvimento/compilação\r\n  throw new Error(\"As variáveis de ambiente NEXT_PUBLIC_SUPABASE_URL e NEXT_PUBLIC_SUPABASE_ANON_KEY devem estar definidas.\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAExB;;AAEA,yEAAyE;AACzE,MAAM;AACN,MAAM;AAEN,yDAAyD;AACzD;;AAKO,MAAM,WAAW,IAAA,iKAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/components/Layout.tsx"],"sourcesContent":["// components/Layout.tsx\r\n\r\nimport React, { ReactNode } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport { supabase } from '../lib/supabaseClient';\r\nimport { Home, Users, DollarSign, LogOut, Settings } from 'lucide-react'; // Ícones para o menu\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n  title: string; // Título da página atual\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children, title }) => {\r\n  const router = useRouter();\r\n\r\n  const handleLogout = async () => {\r\n    // Realiza o logout no Supabase\r\n    const { error } = await supabase.auth.signOut();\r\n    if (error) {\r\n      console.error('Erro ao fazer logout:', error);\r\n    } else {\r\n      // Redireciona para a página de login após o logout\r\n      router.push('/login');\r\n    }\r\n  };\r\n\r\n  // Define os itens de navegação da sidebar\r\n  const navItems = [\r\n    { name: 'Dashboard', href: '/home-acao', icon: <Home className=\"w-5 h-5\" /> },\r\n    { name: 'Elenco', href: '/elenco', icon: <Users className=\"w-5 h-5\" /> },\r\n    { name: 'Financeiro', href: '/financeiro', icon: <DollarSign className=\"w-5 h-5\" /> }, // Página futura (adicionar rota se necessário)\r\n    // { name: 'Configurações', href: '/settings', icon: <Settings className=\"w-5 h-5\" /> }, // Página futura\r\n  ];\r\n\r\n  return (\r\n    // Aplica o fundo escuro (graphite) e o texto claro (light) a TODO o layout\r\n    // Usa flex para alinhar a sidebar e o conteúdo principal lado a lado\r\n    <div className=\"min-h-screen bg-dribla-graphite text-dribla-light flex\">\r\n      \r\n      {/* Sidebar de Navegação Fixa */}\r\n      <aside className=\"w-64 bg-gray-900 border-r border-gray-700 p-6 flex flex-col justify-between\">\r\n        <div>\r\n          {/* Logo/Título na Sidebar */}\r\n          <Link href=\"/home-acao\">\r\n             <span className=\"text-3xl font-bold text-dribla-green mb-10 block cursor-pointer\">Dribla</span>\r\n          </Link>\r\n          \r\n          {/* Itens de Navegação */}\r\n          <nav className=\"space-y-4\">\r\n            {navItems.map((item) => (\r\n              <Link key={item.name} href={item.href} legacyBehavior>\r\n                <a \r\n                  className={`flex items-center space-x-3 px-4 py-2 rounded-lg transition duration-200 \r\n                    ${router.pathname === item.href \r\n                      ? 'bg-dribla-green text-gray-900 font-bold shadow-md' // Estilo ativo\r\n                      : 'text-gray-300 hover:bg-gray-700 hover:text-white' // Estilo inativo/hover\r\n                    }`}\r\n                >\r\n                  {item.icon}\r\n                  <span>{item.name}</span>\r\n                </a>\r\n              </Link>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n        \r\n        {/* Botão de Logout na base da Sidebar */}\r\n        <button \r\n          onClick={handleLogout} \r\n          className=\"flex w-full items-center space-x-3 px-4 py-2 rounded-lg text-gray-300 hover:bg-red-800 hover:text-white transition duration-200 mt-8\"\r\n        >\r\n          <LogOut className=\"w-5 h-5\" />\r\n          <span>Sair</span>\r\n        </button>\r\n      </aside>\r\n\r\n      {/* Conteúdo Principal (Ocupa o restante da tela) */}\r\n      <div className=\"flex-1 flex flex-col\">\r\n          {/* Cabeçalho da Seção Principal (Título da Página) */}\r\n          <header className=\"px-8 py-6 border-b border-gray-700\">\r\n            <h1 className=\"text-3xl font-bold text-white\">{title}</h1>\r\n          </header>\r\n          \r\n          {/* Área de Conteúdo da Página Atual */}\r\n          <main className=\"flex-1 p-8 overflow-y-auto\"> \r\n            {/* O children é onde o conteúdo de /elenco, /home-acao, etc., será renderizado */}\r\n            {children} \r\n          </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;;AAGxB;AACA;AACA;AACA,qUAA0E,qBAAqB;AAA/F;AAAA;AAAA;;;;;;AAOA,MAAM,SAAgC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE;IACxD,MAAM,SAAS,IAAA,oIAAS;IAExB,MAAM,eAAe;QACnB,+BAA+B;QAC/B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0HAAQ,CAAC,IAAI,CAAC,OAAO;QAC7C,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,yBAAyB;QACzC,OAAO;YACL,mDAAmD;YACnD,OAAO,IAAI,CAAC;QACd;IACF;IAEA,0CAA0C;IAC1C,MAAM,WAAW;QACf;YAAE,MAAM;YAAa,MAAM;YAAc,oBAAM,qKAAC,mMAAI;gBAAC,WAAU;;;;;;QAAa;QAC5E;YAAE,MAAM;YAAU,MAAM;YAAW,oBAAM,qKAAC,sMAAK;gBAAC,WAAU;;;;;;QAAa;QACvE;YAAE,MAAM;YAAc,MAAM;YAAe,oBAAM,qKAAC,yNAAU;gBAAC,WAAU;;;;;;QAAa;KAErF;IAED,OACE,2EAA2E;IAC3E,qEAAqE;kBACrE,qKAAC;QAAI,WAAU;;0BAGb,qKAAC;gBAAM,WAAU;;kCACf,qKAAC;;0CAEC,qKAAC,gIAAI;gCAAC,MAAK;0CACR,cAAA,qKAAC;oCAAK,WAAU;8CAAkE;;;;;;;;;;;0CAIrF,qKAAC;gCAAI,WAAU;0CACZ,SAAS,GAAG,CAAC,CAAC,qBACb,qKAAC,gIAAI;wCAAiB,MAAM,KAAK,IAAI;wCAAE,cAAc;kDACnD,cAAA,qKAAC;4CACC,WAAW,CAAC;oBACV,EAAE,OAAO,QAAQ,KAAK,KAAK,IAAI,GAC3B,oDAAoD,eAAe;+CACnE,mDAAmD,uBAAuB;8CAC5E;;gDAEH,KAAK,IAAI;8DACV,qKAAC;8DAAM,KAAK,IAAI;;;;;;;;;;;;uCATT,KAAK,IAAI;;;;;;;;;;;;;;;;kCAiB1B,qKAAC;wBACC,SAAS;wBACT,WAAU;;0CAEV,qKAAC,6MAAM;gCAAC,WAAU;;;;;;0CAClB,qKAAC;0CAAK;;;;;;;;;;;;;;;;;;0BAKV,qKAAC;gBAAI,WAAU;;kCAEX,qKAAC;wBAAO,WAAU;kCAChB,cAAA,qKAAC;4BAAG,WAAU;sCAAiC;;;;;;;;;;;kCAIjD,qKAAC;wBAAK,WAAU;kCAEb;;;;;;;;;;;;;;;;;;AAKb;uCAEe","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/components/ModalNovoAluno.tsx"],"sourcesContent":["// components/ModalNovoAluno.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { supabase } from '../lib/supabaseClient';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\ninterface ModalNovoAlunoProps {\r\n  onClose: () => void;\r\n  onAlunoAdicionado: () => void; // Callback para atualizar a lista\r\n}\r\n\r\n// Define os tipos de status que podemos SALVAR inicialmente\r\ntype StatusInicialPossivel = 'paga' | 'vencida';\r\n\r\nconst ModalNovoAluno: React.FC<ModalNovoAlunoProps> = ({ onClose, onAlunoAdicionado }) => {\r\n  const [nome, setNome] = useState('');\r\n  const [nomePai, setNomePai] = useState('');\r\n  const [emailPai, setEmailPai] = useState('');\r\n  const [valor, setValor] = useState<number | ''>('');\r\n  // Padrão para hoje no formato YYYY-MM-DD\r\n  const hoje = new Date().toISOString().slice(0, 10);\r\n  const [vencimento, setVencimento] = useState<string>(hoje);\r\n  // NOVO ESTADO: Controla se o pagamento inicial foi feito (true = pago, false = não pago)\r\n  const [foiPagoInicialmente, setFoiPagoInicialmente] = useState<boolean>(true); // Padrão 'pago'\r\n  const [loadingModal, setLoadingModal] = useState(false);\r\n  const [errorModal, setErrorModal] = useState<string | null>(null);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoadingModal(true);\r\n    setErrorModal(null);\r\n\r\n    // Validação Simples\r\n    if (!nome || !emailPai || valor === '' || !vencimento) {\r\n      setErrorModal('Preencha todos os campos obrigatórios.');\r\n      setLoadingModal(false);\r\n      return;\r\n    }\r\n     if (valor < 0) {\r\n       setErrorModal('O valor da mensalidade não pode ser negativo.');\r\n       setLoadingModal(false);\r\n       return;\r\n    }\r\n\r\n    // Verificação de Limite de Alunos (código omitido por brevidade - continua igual)\r\n    const { data: { user } } = await supabase.auth.getUser();\r\n    if (!user) {\r\n      setErrorModal('Usuário não autenticado. Faça login novamente.');\r\n      setLoadingModal(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n        // Busca dados do treinador e conta alunos (código omitido por brevidade - continua igual)\r\n        const { data: treinadorData, error: treinadorError } = await supabase.from('treinadores').select('plano_atual, limite_alunos').eq('id', user.id).single();\r\n        if (treinadorError) throw treinadorError;\r\n        const { count: alunosAtuais, error: countError } = await supabase.from('alunos').select('*', { count: 'exact', head: true }).eq('id_treinador', user.id);\r\n        if (countError) throw countError;\r\n        if (treinadorData.plano_atual !== 'premium' && (alunosAtuais ?? 0) >= treinadorData.limite_alunos) {\r\n             setErrorModal(`Limite de ${treinadorData.limite_alunos} alunos atingido para o plano ${treinadorData.plano_atual.toUpperCase()}. Faça upgrade.`);\r\n             setLoadingModal(false);\r\n             return;\r\n        }\r\n\r\n\r\n        // --- LÓGICA CORRIGIDA PARA STATUS INICIAL ---\r\n        let statusParaSalvar: StatusInicialPossivel = 'paga'; // Padrão\r\n\r\n        if (!foiPagoInicialmente) {\r\n            // Converte a data de vencimento (string YYYY-MM-DD) para um objeto Date (UTC)\r\n            const dataVencimentoObj = new Date(vencimento + 'T00:00:00Z');\r\n            // Pega a data de hoje (meia-noite UTC) para comparação correta\r\n            const hojeObj = new Date();\r\n            hojeObj.setUTCHours(0, 0, 0, 0);\r\n\r\n            // Se a data de vencimento for ANTERIOR a hoje, marca como vencida\r\n            if (dataVencimentoObj < hojeObj) {\r\n                statusParaSalvar = 'vencida';\r\n            }\r\n            // Se for hoje ou no futuro, mantém 'paga' (a automação pegará depois)\r\n        }\r\n        // Se foiPagoInicialmente for true, o status já é 'paga'\r\n\r\n        // --- Inserção do Aluno ---\r\n        const payload = {\r\n          nome_aluno: nome,\r\n          nome_pai: nomePai || 'Não informado',\r\n          email_pai: emailPai,\r\n          data_matricula: hoje,\r\n          data_vencimento_mensalidade: vencimento, // Salva a data escolhida\r\n          // Usa o status calculado\r\n          status_mensalidade: statusParaSalvar,\r\n          valor_mensalidade: valor,\r\n          id_treinador: user.id\r\n        };\r\n\r\n        const { error: insertError } = await supabase.from('alunos').insert([payload]);\r\n\r\n        if (insertError) {\r\n          console.error('Erro ao inserir aluno:', insertError);\r\n          throw new Error('Erro ao cadastrar atleta. Verifique os dados e tente novamente.');\r\n        }\r\n\r\n        // Sucesso!\r\n        setLoadingModal(false);\r\n        onAlunoAdicionado();\r\n\r\n    } catch (err: any) {\r\n        console.error(\"Erro no Modal:\", err);\r\n        setErrorModal(err.message || 'Ocorreu um erro inesperado.');\r\n        setLoadingModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70 backdrop-blur-sm\">\r\n      <div className=\"bg-gray-800 p-8 rounded-xl shadow-2xl z-10 w-full max-w-lg border border-gray-700\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-white text-center\">Adicionar Novo Atleta</h2>\r\n\r\n        {errorModal && <p className=\"text-red-400 bg-red-900/50 p-3 rounded mb-4 text-center\">{errorModal}</p>}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {/* Campos Nome Aluno, Nome Pai, Email Pai (sem alterações) */}\r\n          <div>\r\n            <label htmlFor=\"nome-aluno\" className=\"block text-sm font-medium text-gray-300 mb-1\">Nome do Atleta*</label>\r\n            <input id=\"nome-aluno\" value={nome} onChange={(e) => setNome(e.target.value)} required className=\"w-full input-dribla\" placeholder=\"Nome completo do aluno\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"nome-pai\" className=\"block text-sm font-medium text-gray-300 mb-1\">Nome do Responsável</label>\r\n            <input id=\"nome-pai\" value={nomePai} onChange={(e) => setNomePai(e.target.value)} className=\"w-full input-dribla\" placeholder=\"(Opcional)\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email-pai\" className=\"block text-sm font-medium text-gray-300 mb-1\">Email do Responsável*</label>\r\n            <input id=\"email-pai\" value={emailPai} onChange={(e) => setEmailPai(e.target.value)} type=\"email\" required className=\"w-full input-dribla\" placeholder=\"Para envio de cobranças\"/>\r\n          </div>\r\n\r\n          {/* Linha para Valor e Vencimento (sem alterações) */}\r\n           <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\r\n            <div className=\"flex-1\">\r\n              <label htmlFor=\"valor\" className=\"block text-sm font-medium text-gray-300 mb-1\">Valor Mensalidade (R$)*</label>\r\n              <input id=\"valor\" value={valor} onChange={(e) => setValor(e.target.value === '' ? '' : Number(e.target.value))} type=\"number\" min=\"0\" step=\"0.01\" required className=\"w-full input-dribla\" placeholder=\"Ex: 100.00\"/>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <label htmlFor=\"vencimento\" className=\"block text-sm font-medium text-gray-300 mb-1\">Próximo Vencimento*</label>\r\n              <input id=\"vencimento\" value={vencimento} onChange={(e) => setVencimento(e.target.value)} type=\"date\" required className=\"w-full input-dribla\"/>\r\n            </div>\r\n          </div>\r\n\r\n          {/* CAMPO CORRIGIDO: Status Inicial (Pago / Não Pago) */}\r\n          <div>\r\n             <label className=\"block text-sm font-medium text-gray-300 mb-2\">Status da Mensalidade na Matrícula*</label>\r\n             <div className=\"flex items-center space-x-6\">\r\n                {/* Opção Pago */}\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"statusInicial\"\r\n                        checked={foiPagoInicialmente === true} // Liga ao estado booleano\r\n                        onChange={() => setFoiPagoInicialmente(true)}\r\n                        className=\"form-radio h-4 w-4 text-dribla-green bg-gray-600 border-gray-500 focus:ring-dribla-green\"\r\n                    />\r\n                    <span className=\"ml-2 text-sm text-gray-300\">Pago</span>\r\n                </label>\r\n                {/* Opção Não Pago */}\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"statusInicial\"\r\n                        checked={foiPagoInicialmente === false} // Liga ao estado booleano\r\n                        onChange={() => setFoiPagoInicialmente(false)}\r\n                         className=\"form-radio h-4 w-4 text-dribla-orange bg-gray-600 border-gray-500 focus:ring-dribla-orange\"\r\n                    />\r\n                    <span className=\"ml-2 text-sm text-gray-300\">Não Pago</span>\r\n                </label>\r\n             </div>\r\n             {/* Ajuda contextual */}\r\n             {!foiPagoInicialmente && (\r\n                <p className=\"mt-2 text-xs text-gray-400\">\r\n                    Se a data de vencimento acima já passou, o status será 'Vencido'. Caso contrário, será 'Pago' (pendente).\r\n                </p>\r\n             )}\r\n          </div>\r\n\r\n          {/* Botões de Ação (sem alterações) */}\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <button type=\"button\" onClick={onClose} className=\"btn-secondary\">\r\n              Cancelar\r\n            </button>\r\n            <button type=\"submit\" disabled={loadingModal} className=\"btn-primary flex items-center\">\r\n              {loadingModal ? <Loader2 className=\"w-5 h-5 animate-spin mr-2\" /> : null}\r\n              {loadingModal ? 'Salvando...' : 'Adicionar Atleta'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n       {/* Estilos Globais JSX (sem alterações) */}\r\n      <style jsx global>{`\r\n        .input-dribla { /* ... estilos ... */ }\r\n        .input-dribla:focus { /* ... estilos ... */ }\r\n         .btn-primary { /* ... estilos ... */ }\r\n        .btn-primary:hover { /* ... estilos ... */ }\r\n         .btn-primary:disabled { /* ... estilos ... */ }\r\n        .btn-secondary { /* ... estilos ... */ }\r\n        .btn-secondary:hover { /* ... estilos ... */ }\r\n        /* Estiliza os radio buttons */\r\n        .form-radio { appearance: none; border-radius: 50%; width: 1rem; height: 1rem; border: 1px solid rgb(75 85 99); background-color: rgb(55 65 81); transition: background-color 0.2s; }\r\n        .form-radio:checked { background-color: currentColor; border-color: currentColor; background-image: url(\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e\"); }\r\n        .form-radio:focus { outline: 2px solid transparent; outline-offset: 2px; box-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); }\r\n\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalNovoAluno;\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/pages/elenco.tsx"],"sourcesContent":["// pages/elenco.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport Layout from '../components/Layout';\r\n// IMPORTANDO O MODAL SEPARADO\r\nimport ModalNovoAluno from '../components/ModalNovoAluno';\r\nimport { supabase } from '../lib/supabaseClient';\r\nimport { useRouter } from 'next/router';\r\nimport { Loader2, Plus, Edit, Trash2 } from 'lucide-react';\r\nimport Link from 'next/link';\r\n\r\n// Tipagem para os dados de Aluno (garante consistência)\r\ninterface Aluno {\r\n  id: number;\r\n  nome_aluno: string;\r\n  nome_pai: string;\r\n  email_pai: string;\r\n  data_matricula: string; // ou Date, se preferir objetos Date\r\n  data_vencimento_mensalidade: string;\r\n  status_mensalidade: 'paga' | 'proximo' | 'vencida';\r\n  valor_mensalidade: number;\r\n}\r\n\r\nconst ElencoPage: React.FC = () => {\r\n  const router = useRouter();\r\n  const [alunos, setAlunos] = useState<Aluno[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showModal, setShowModal] = useState(false); // Estado para controlar a visibilidade do modal\r\n  // Lê o filtro inicial da URL ou define 'todos' como padrão\r\n  const initialFilter = router.query.filtro === 'vencida' ? 'atrasados' : router.query.filtro === 'proximo' ? 'proximo' : 'todos';\r\n  const [currentFilter, setCurrentFilter] = useState<'todos' | 'atrasados' | 'proximo' | 'paga'>(initialFilter as 'todos' | 'atrasados' | 'proximo' | 'paga');\r\n\r\n\r\n  // Função para buscar os alunos no Supabase\r\n  const fetchAlunos = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const { data: { user } } = await supabase.auth.getUser();\r\n    if (!user) {\r\n      router.push('/login'); // Redireciona se não estiver logado\r\n      return;\r\n    }\r\n\r\n    // Monta a query base\r\n    let query = supabase\r\n      .from('alunos')\r\n      .select('*')\r\n      .eq('id_treinador', user.id); // Filtra sempre pelo treinador logado\r\n\r\n    // Aplica o filtro de status selecionado\r\n    if (currentFilter === 'atrasados') {\r\n        query = query.eq('status_mensalidade', 'vencida');\r\n    } else if (currentFilter === 'proximo') {\r\n        query = query.eq('status_mensalidade', 'proximo');\r\n    } else if (currentFilter === 'paga') {\r\n        query = query.eq('status_mensalidade', 'paga');\r\n    }\r\n    // 'todos' não precisa de filtro extra de status\r\n\r\n    // Ordena por nome do aluno\r\n    const { data, error: fetchError } = await query.order('nome_aluno', { ascending: true });\r\n\r\n    if (fetchError) {\r\n      console.error(\"Erro ao buscar alunos:\", fetchError);\r\n      setError(\"Não foi possível carregar o elenco. Tente novamente.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Atualiza o estado com os alunos encontrados\r\n    setAlunos(data || []);\r\n    setLoading(false);\r\n  };\r\n\r\n  // useEffect para buscar alunos quando o componente monta ou o filtro muda\r\n  useEffect(() => {\r\n    fetchAlunos();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentFilter]); // Dependência: re-executa quando currentFilter muda\r\n\r\n  // Função chamada pelo Modal após um aluno ser adicionado com sucesso\r\n  const handleAlunoAdicionado = () => {\r\n    setShowModal(false); // Fecha o modal\r\n    fetchAlunos(); // Recarrega a lista para mostrar o novo aluno\r\n  };\r\n\r\n  // Formata a data (DD/MM/YYYY) - Garante tratamento UTC\r\n  const formatDate = (dateString: string | null) => {\r\n     if (!dateString) return '-';\r\n     const date = new Date(dateString + 'T00:00:00Z'); // Interpreta como UTC\r\n     const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: '2-digit', day: '2-digit', timeZone: 'UTC' };\r\n     return date.toLocaleDateString('pt-BR', options);\r\n  };\r\n\r\n  // Formata o valor monetário (R$ XX,XX)\r\n  const formatCurrency = (value: number | null) => {\r\n    if (value === null || value === undefined) return 'R$ 0,00';\r\n    return value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\r\n  };\r\n\r\n  // Mapeamento de status para texto e classes CSS para os badges\r\n  const statusMap = {\r\n      paga: { text: 'Pago', className: 'bg-green-100 text-green-800' },\r\n      proximo: { text: 'Próximo', className: 'bg-blue-100 text-blue-800' },\r\n      vencida: { text: 'Vencido', className: 'bg-red-100 text-red-800' }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Dribla | Elenco</title>\r\n      </Head>\r\n      <Layout title=\"Gestão de Alunos\"> {/* Usa o Layout com sidebar */}\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-center mb-6 gap-4\">\r\n          {/* Botão para abrir o modal */}\r\n          <button\r\n            onClick={() => setShowModal(true)} // Ação de clique para mostrar o modal\r\n            className=\"w-full sm:w-auto flex items-center justify-center px-5 py-2 bg-dribla-green text-gray-900 font-bold rounded-lg hover:bg-green-600 transition duration-200 shadow-md\"\r\n          >\r\n            <Plus className=\"w-5 h-5 mr-2\" /> Novo Atleta\r\n          </button>\r\n\r\n          {/* Botões de Filtro */}\r\n          <div className=\"flex flex-wrap justify-center space-x-2\">\r\n            {/* Botão Todos */}\r\n            <button\r\n                onClick={() => setCurrentFilter('todos')}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition duration-150 ${currentFilter === 'todos' ? 'bg-dribla-green text-gray-900 shadow-md' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`}\r\n            >\r\n                Todos\r\n            </button>\r\n            {/* Botão Atrasados */}\r\n            <button\r\n                onClick={() => setCurrentFilter('atrasados')}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition duration-150 ${currentFilter === 'atrasados' ? 'bg-dribla-orange text-gray-900 shadow-md' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`}\r\n            >\r\n                Atrasados\r\n            </button>\r\n             {/* Botão Próximos */}\r\n            <button\r\n                onClick={() => setCurrentFilter('proximo')}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition duration-150 ${currentFilter === 'proximo' ? 'bg-blue-500 text-white shadow-md' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`}\r\n            >\r\n                Próximos\r\n            </button>\r\n             {/* Botão Pagos */}\r\n             <button\r\n                onClick={() => setCurrentFilter('paga')}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition duration-150 ${currentFilter === 'paga' ? 'bg-gray-500 text-white shadow-md' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`}\r\n            >\r\n                Pagos\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Indicador de Carregamento */}\r\n        {loading && (\r\n          <div className=\"flex justify-center items-center py-10\">\r\n            <Loader2 className=\"w-10 h-10 text-dribla-green animate-spin\" />\r\n          </div>\r\n        )}\r\n\r\n        {/* Mensagem de Erro */}\r\n        {error && (\r\n          <p className=\"text-red-500 text-center mt-8 bg-red-900/30 p-4 rounded-lg border border-red-700\">{error}</p>\r\n        )}\r\n\r\n        {/* Estado Vazio (Sem alunos no filtro) */}\r\n        {!loading && !error && alunos.length === 0 && (\r\n          <div className=\"bg-gray-800 p-8 rounded-lg text-center text-gray-400 border border-gray-700 shadow-lg\">\r\n            <p className=\"text-xl font-semibold mb-3 text-white\">Nenhum atleta encontrado.</p>\r\n            <p className='mb-6'>Parece que você ainda não cadastrou atletas ou não há atletas neste filtro.</p>\r\n             <button\r\n                onClick={() => setShowModal(true)} // Botão para adicionar o primeiro atleta\r\n                className=\"flex items-center justify-center mx-auto px-5 py-2 bg-dribla-green text-gray-900 font-bold rounded-lg hover:bg-green-600 transition duration-200 shadow-md\"\r\n            >\r\n                <Plus className=\"w-5 h-5 mr-2\" /> Adicionar Primeiro Atleta\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Tabela de Alunos (quando há dados) */}\r\n        {!loading && !error && alunos.length > 0 && (\r\n          <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl border border-gray-700\">\r\n            <table className=\"min-w-full divide-y divide-gray-700\">\r\n              <thead className=\"bg-gray-700\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                    Aluno\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                    Responsável\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                    Vencimento\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                    Valor\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                    Status\r\n                  </th>\r\n                  <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                    <span className=\"sr-only\">Ações</span>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-700\">\r\n                {alunos.map((aluno) => (\r\n                  <tr key={aluno.id} className=\"hover:bg-gray-700/50 transition duration-150\">\r\n                    {/* Colunas da Tabela */}\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm font-medium text-white\">{aluno.nome_aluno}</div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-300\">{aluno.nome_pai}</div>\r\n                      <div className=\"text-xs text-gray-500\">{aluno.email_pai}</div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-300\">{formatDate(aluno.data_vencimento_mensalidade)}</div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-300\">{formatCurrency(aluno.valor_mensalidade)}</div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {/* Badge de Status Colorido */}\r\n                      <span className={`px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full\r\n                        ${statusMap[aluno.status_mensalidade]?.className ?? ''}\r\n                      `}>\r\n                        {statusMap[aluno.status_mensalidade]?.text ?? 'Desconhecido'}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                      {/* Botões de Ação (Editar/Excluir - Lógica a implementar) */}\r\n                      <button className=\"text-blue-400 hover:text-blue-300 mx-2\" title=\"Editar Aluno\">\r\n                        <Edit className=\"w-5 h-5\" />\r\n                      </button>\r\n                      <button className=\"text-red-400 hover:text-red-300 mx-2\" title=\"Excluir Aluno\">\r\n                        <Trash2 className=\"w-5 h-5\" />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n\r\n        {/* Renderiza o Modal se showModal for true */}\r\n        {showModal && (\r\n          <ModalNovoAluno\r\n            onClose={() => setShowModal(false)} // Passa a função para fechar\r\n            onAlunoAdicionado={handleAlunoAdicionado} // Passa o callback de sucesso\r\n          />\r\n        )}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ElencoPage;\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}