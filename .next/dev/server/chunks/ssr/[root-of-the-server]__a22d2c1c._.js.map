{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/lib/supabaseClient.ts"],"sourcesContent":["// lib/supabaseClient.ts\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Variáveis de ambiente devem ser configuradas no Vercel e no .env.local\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\n// Verifica se as chaves existem antes de criar o cliente\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  // Lançar um erro claro para o ambiente de desenvolvimento/compilação\r\n  throw new Error(\"As variáveis de ambiente NEXT_PUBLIC_SUPABASE_URL e NEXT_PUBLIC_SUPABASE_ANON_KEY devem estar definidas.\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAExB;;AAEA,yEAAyE;AACzE,MAAM;AACN,MAAM;AAEN,yDAAyD;AACzD;;AAKO,MAAM,WAAW,IAAA,iKAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows%2011/Desktop/Dribla/dribla_frontend/pages/cadastro.tsx"],"sourcesContent":["// pages/cadastro.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport { supabase } from '../lib/supabaseClient'; // Importa o cliente Supabase\r\nimport { useRouter } from 'next/router';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\nconst CadastroPage: React.FC = () => {\r\n  const router = useRouter();\r\n  const [nome, setNome] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n\r\n  const handleCadastro = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n\r\n    // 1. Registrar o usuário no Supabase Auth\r\n    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({\r\n      email: email,\r\n      password: password,\r\n      options: {\r\n        // Passa o nome para ser usado pelo trigger no Supabase\r\n        data: { nome: nome } \r\n      }\r\n    });\r\n\r\n    if (signUpError) {\r\n      console.error(\"Erro no cadastro:\", signUpError.message);\r\n      setError(signUpError.message || \"Erro ao criar conta. Verifique os dados.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // --- REMOVIDO: A TENTATIVA DE INSERT MANUAL FOI RETIRADA DAQUI ---\r\n    // O Gatilho no Supabase (handle_new_user) cuidará da criação\r\n    // da linha na tabela 'treinadores'.\r\n\r\n    if (signUpData.user) {\r\n        setSuccess(\"Conta criada com sucesso! Redirecionando para o login...\");\r\n        // Redireciona para o login após um pequeno atraso\r\n        setTimeout(() => {\r\n          router.push('/login');\r\n        }, 2000);\r\n    } else {\r\n        // Caso raro onde o user não é retornado, mas não houve erro\r\n         setError(\"Ocorreu um problema inesperado. Tente novamente.\");\r\n         setLoading(false);\r\n    }\r\n\r\n    // Não precisamos mais esperar a inserção, setLoading(false) agora é implícito no sucesso/erro final\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Dribla | Crie sua Conta</title>\r\n      </Head>\r\n      \r\n      {/* Container simples, centralizado e dark mode */}\r\n      <div className=\"min-h-screen flex items-center justify-center bg-dribla-graphite text-dribla-light p-4\">\r\n        <div className=\"w-full max-w-md bg-gray-800 p-8 rounded-xl shadow-2xl border border-gray-700\">\r\n          <h1 className=\"text-3xl font-bold text-center mb-6 text-dribla-green\">Crie sua Conta Dribla</h1>\r\n          \r\n          {error && <p className=\"mb-4 text-center text-red-500 bg-red-900/50 p-2 rounded\">{error}</p>}\r\n          {success && <p className=\"mb-4 text-center text-dribla-green bg-green-900/50 p-2 rounded\">{success}</p>}\r\n\r\n          {/* Formulário de Cadastro */}\r\n          <form onSubmit={handleCadastro} className=\"space-y-6\">\r\n             <div>\r\n              <label htmlFor=\"nome\" className=\"block text-sm font-medium text-gray-300\">Nome ou Nome da Escolinha</label>\r\n              <input \r\n                type=\"text\" \r\n                id=\"nome\" \r\n                value={nome}\r\n                onChange={(e) => setNome(e.target.value)}\r\n                required\r\n                className=\"mt-1 block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-dribla-green focus:border-dribla-green sm:text-sm text-white\"\r\n                placeholder=\"Ex: Treinador Silva\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300\">Email</label>\r\n              <input \r\n                type=\"email\" \r\n                id=\"email\" \r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                className=\"mt-1 block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-dribla-green focus:border-dribla-green sm:text-sm text-white\"\r\n                placeholder=\"seuemail@exemplo.com\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300\">Senha</label>\r\n              <input \r\n                type=\"password\" \r\n                id=\"password\" \r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n                minLength={6} // Supabase exige mínimo de 6 caracteres\r\n                className=\"mt-1 block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-dribla-green focus:border-dribla-green sm:text-sm text-white\"\r\n                placeholder=\"Mínimo 6 caracteres\"\r\n              />\r\n            </div>\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading || !!success} // Desabilita se estiver carregando ou se já deu sucesso\r\n              className={`w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-gray-900 bg-dribla-green hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-dribla-green transition duration-200 flex justify-center items-center ${loading || success ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n            >\r\n              {loading ? <Loader2 className=\"w-5 h-5 animate-spin\" /> : 'Criar Conta Grátis'}\r\n            </button>\r\n          </form>\r\n\r\n          <p className=\"mt-6 text-center text-sm text-gray-400\">\r\n            Já tem uma conta?{' '}\r\n            <Link href=\"/login\" className=\"font-medium text-dribla-green hover:text-green-600\">\r\n              Faça login\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CadastroPage;\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}